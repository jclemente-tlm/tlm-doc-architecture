"use strict";(self.webpackChunktlm_doc_architecture=self.webpackChunktlm_doc_architecture||[]).push([[5621],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var s=i(96540);const r={},a=s.createContext(r);function c(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(a.Provider,{value:n},e.children)}},42659:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"lineamientos/estandares-de-codigo/01-csharp","title":"C# y .NET","description":"Lineamientos de Clean Code, estilo, buenas pr\xe1cticas y seguridad para C# y .NET.","source":"@site/docs/lineamientos/estandares-de-codigo/01-csharp.md","sourceDirName":"lineamientos/estandares-de-codigo","slug":"/lineamientos/estandares-de-codigo/01-csharp","permalink":"/docs/lineamientos/estandares-de-codigo/01-csharp","draft":false,"unlisted":false,"editUrl":"https://github.com/jclemente-tlm/tlm-doc-architecture/edit/main/docs/lineamientos/estandares-de-codigo/01-csharp.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"C# y .NET","description":"Lineamientos de Clean Code, estilo, buenas pr\xe1cticas y seguridad para C# y .NET.","id":"01-csharp","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Est\xe1ndares de C\xf3digo","permalink":"/docs/lineamientos/estandares-de-codigo"},"next":{"title":"TypeScript","permalink":"/docs/lineamientos/estandares-de-codigo/02-typescript"}}');var r=i(74848),a=i(28453);const c={title:"C# y .NET",description:"Lineamientos de Clean Code, estilo, buenas pr\xe1cticas y seguridad para C# y .NET.",id:"01-csharp",sidebar_position:1},l=void 0,d={},o=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Objetivo",id:"objetivo",level:2},{value:"Alcance",id:"alcance",level:2},{value:"Principios clave de Clean Code en C",id:"principios-clave-de-clean-code-en-c",level:2},{value:"1. Nombres claros y significativos",id:"1-nombres-claros-y-significativos",level:3},{value:"2. Funciones cortas y de una sola responsabilidad (SRP)",id:"2-funciones-cortas-y-de-una-sola-responsabilidad-srp",level:3},{value:"3. Evita duplicidad (DRY)",id:"3-evita-duplicidad-dry",level:3},{value:"4. Simplicidad (KISS)",id:"4-simplicidad-kiss",level:3},{value:"5. No escribas c\xf3digo que no necesitas (YAGNI)",id:"5-no-escribas-c\xf3digo-que-no-necesitas-yagni",level:3},{value:"6. Manejo adecuado de errores",id:"6-manejo-adecuado-de-errores",level:3},{value:"7. Comentarios \xfatiles y documentaci\xf3n",id:"7-comentarios-\xfatiles-y-documentaci\xf3n",level:3},{value:"8. Organizaci\xf3n y modularidad",id:"8-organizaci\xf3n-y-modularidad",level:3},{value:"9. Colecciones y estructuras de control",id:"9-colecciones-y-estructuras-de-control",level:3},{value:"10. Manejo de dependencias",id:"10-manejo-de-dependencias",level:3},{value:"11. Pruebas y refactorizaci\xf3n",id:"11-pruebas-y-refactorizaci\xf3n",level:3},{value:"12. Antipatrones comunes a evitar",id:"12-antipatrones-comunes-a-evitar",level:3},{value:"Buenas pr\xe1cticas adicionales",id:"buenas-pr\xe1cticas-adicionales",level:2},{value:"Seguridad",id:"seguridad",level:2},{value:"Referencias",id:"referencias",level:2},{value:"\xdaltima revisi\xf3n",id:"\xfaltima-revisi\xf3n",level:2}];function t(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["Este documento resume y adapta los principios de Clean Code para C# y .NET, basado en la gu\xeda ",(0,r.jsx)(n.a,{href:"https://github.com/thangchung/clean-code-dotnet",children:"clean-code-dotnet"}),", con ejemplos pr\xe1cticos y recomendaciones clave."]}),"\n",(0,r.jsx)(n.h2,{id:"objetivo",children:"Objetivo"}),"\n",(0,r.jsx)(n.p,{children:"Promover un c\xf3digo legible, mantenible y seguro en proyectos C# y .NET, aplicando Clean Code."}),"\n",(0,r.jsx)(n.h2,{id:"alcance",children:"Alcance"}),"\n",(0,r.jsx)(n.p,{children:"Aplica a todos los desarrolladores que trabajen con C# y .NET en la organizaci\xf3n."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"principios-clave-de-clean-code-en-c",children:"Principios clave de Clean Code en C"}),"\n",(0,r.jsx)(n.h3,{id:"1-nombres-claros-y-significativos",children:"1. Nombres claros y significativos"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Usa nombres descriptivos para variables, funciones y clases."}),"\n",(0,r.jsx)(n.li,{children:"Evita abreviaturas, nombres gen\xe9ricos y prefijos innecesarios."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"int userAge;\nstring customerEmail;\nclass InvoiceProcessor {}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"int a;\nstring ce;\nclass IP {}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-funciones-cortas-y-de-una-sola-responsabilidad-srp",children:"2. Funciones cortas y de una sola responsabilidad (SRP)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cada funci\xf3n debe hacer solo una cosa."}),"\n",(0,r.jsx)(n.li,{children:"Prefiere funciones peque\xf1as y reutilizables."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"void SendEmail(string to, string body) { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"void ProcessOrder() {\n  // ...\n  // env\xedo de email incluido aqu\xed (mala pr\xe1ctica)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-evita-duplicidad-dry",children:"3. Evita duplicidad (DRY)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Extrae l\xf3gica repetida en funciones o clases reutilizables."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"bool IsAdult(User user) => user.Age >= 18;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"if (user.Age < 18) { /* ... */ }\nif (user.Age < 18) { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-simplicidad-kiss",children:"4. Simplicidad (KISS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prefiere soluciones simples y directas."}),"\n",(0,r.jsx)(n.li,{children:"Evita l\xf3gica innecesariamente compleja."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"if (user.IsActive) { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"if ((user.Status == 1 || user.Status == 2) && !user.IsBanned) { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"5-no-escribas-c\xf3digo-que-no-necesitas-yagni",children:"5. No escribas c\xf3digo que no necesitas (YAGNI)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implementa solo lo necesario para el requerimiento actual."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// M\xe9todos y clases no usados ni requeridos\nvoid FutureFeature() { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"6-manejo-adecuado-de-errores",children:"6. Manejo adecuado de errores"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Usa excepciones espec\xedficas y mensajes claros."}),"\n",(0,r.jsx)(n.li,{children:"No ocultes errores ni uses catch vac\xedos."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"try {\n  // ...\n} catch (FileNotFoundException ex) {\n  LogError(ex.Message);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"try {\n  // ...\n} catch { }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"7-comentarios-\xfatiles-y-documentaci\xf3n",children:"7. Comentarios \xfatiles y documentaci\xf3n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Comenta solo lo necesario para aclarar intenciones o casos especiales."}),"\n",(0,r.jsx)(n.li,{children:"Prefiere c\xf3digo autoexplicativo."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Calcula el total del pedido incluyendo impuestos\nvoid CalculateTotal() { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// ct\nvoid ct() { /* ... */ }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"8-organizaci\xf3n-y-modularidad",children:"8. Organizaci\xf3n y modularidad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Separa responsabilidades en archivos y clases distintas."}),"\n",(0,r.jsx)(n.li,{children:"Usa namespaces y carpetas para organizar el c\xf3digo."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"namespace Talma.Orders.Services {\n  public class OrderService { /* ... */ }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"9-colecciones-y-estructuras-de-control",children:"9. Colecciones y estructuras de control"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prefiere LINQ y m\xe9todos funcionales para manipular colecciones."}),"\n",(0,r.jsx)(n.li,{children:"Evita bucles anidados y l\xf3gica compleja en una sola funci\xf3n."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"var activeUsers = users.Where(u => u.IsActive).ToList();\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"List<User> activeUsers = new List<User>();\nforeach (var u in users) {\n  if (u.IsActive) activeUsers.Add(u);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"10-manejo-de-dependencias",children:"10. Manejo de dependencias"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Usa inyecci\xf3n de dependencias para facilitar pruebas y mantenimiento."}),"\n",(0,r.jsx)(n.li,{children:"Evita dependencias ocultas o acoplamiento fuerte."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class OrderService {\n  private readonly IEmailSender _emailSender;\n  public OrderService(IEmailSender emailSender) {\n    _emailSender = emailSender;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incorrecto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class OrderService {\n  private EmailSender _emailSender = new EmailSender();\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"11-pruebas-y-refactorizaci\xf3n",children:"11. Pruebas y refactorizaci\xf3n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Escribe pruebas unitarias para l\xf3gica cr\xedtica."}),"\n",(0,r.jsx)(n.li,{children:"Refactoriza regularmente para mantener el c\xf3digo limpio."}),"\n",(0,r.jsx)(n.li,{children:"Usa mocks y fakes para aislar dependencias en pruebas."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correcto:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"[Test]\npublic void CalculateTotal_ReturnsCorrectValue() {\n  // ...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"12-antipatrones-comunes-a-evitar",children:"12. Antipatrones comunes a evitar"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"M\xe9todos y clases demasiado grandes."}),"\n",(0,r.jsx)(n.li,{children:"Variables globales o est\xe1ticas innecesarias."}),"\n",(0,r.jsx)(n.li,{children:"C\xf3digo duplicado o sin uso."}),"\n",(0,r.jsx)(n.li,{children:"Comentarios que explican c\xf3digo confuso en vez de refactorizarlo."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"buenas-pr\xe1cticas-adicionales",children:"Buenas pr\xe1cticas adicionales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Usa herramientas de an\xe1lisis est\xe1tico y linters."}),"\n",(0,r.jsx)(n.li,{children:"Aplica principios SOLID."}),"\n",(0,r.jsx)(n.li,{children:"Mant\xe9n el c\xf3digo alineado y ordenado."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"seguridad",children:"Seguridad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Valida entradas del usuario."}),"\n",(0,r.jsx)(n.li,{children:"No expongas informaci\xf3n sensible en logs."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"referencias",children:"Referencias"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/thangchung/clean-code-dotnet",children:"clean-code-dotnet"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/es-es/dotnet/csharp/fundamentals/coding-style/coding-conventions",children:"Gu\xeda de estilo de C#"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://es.wikipedia.org/wiki/SOLID",children:"Principios SOLID"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.oreilly.com/library/view/clean-code/9780136083238/",children:"Clean Code (Robert C. Martin)"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\xfaltima-revisi\xf3n",children:"\xdaltima revisi\xf3n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fecha: 2025-08-08"}),"\n",(0,r.jsx)(n.li,{children:"Responsable: Equipo de Arquitectura"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}}}]);