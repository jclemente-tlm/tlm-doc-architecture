"use strict";(self.webpackChunktlm_doc_architecture=self.webpackChunktlm_doc_architecture||[]).push([[4222],{25726:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"servicios-corporativos/servicio-notificacion/decisiones-arquitectura","title":"9. Decisiones de arquitectura","description":"9.1 Decisiones principales","source":"@site/docs/servicios-corporativos/servicio-notificacion/09-decisiones-arquitectura.md","sourceDirName":"servicios-corporativos/servicio-notificacion","slug":"/servicios-corporativos/servicio-notificacion/decisiones-arquitectura","permalink":"/docs/servicios-corporativos/servicio-notificacion/decisiones-arquitectura","draft":false,"unlisted":false,"editUrl":"https://github.com/jclemente-tlm/tlm-doc-architecture/edit/main/docs/servicios-corporativos/servicio-notificacion/09-decisiones-arquitectura.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"8. Conceptos transversales","permalink":"/docs/servicios-corporativos/servicio-notificacion/conceptos-transversales"},"next":{"title":"10. Requisitos de Calidad","permalink":"/docs/servicios-corporativos/servicio-notificacion/requisitos-calidad"}}');var r=i(74848),t=i(28453);const a={},c="9. Decisiones de arquitectura",l={},d=[{value:"9.1 Decisiones principales",id:"91-decisiones-principales",level:2},{value:"9.2 Alternativas evaluadas",id:"92-alternativas-evaluadas",level:2},{value:"Resumen de Decisiones Arquitect\xf3nicas",id:"resumen-de-decisiones-arquitect\xf3nicas",level:2},{value:"Principios Arquitect\xf3nicos",id:"principios-arquitect\xf3nicos",level:3},{value:"ADR-001: Estrategia Multi-Proveedor para Confiabilidad",id:"adr-001-estrategia-multi-proveedor-para-confiabilidad",level:2},{value:"Contexto",id:"contexto",level:3},{value:"Alternativas Consideradas",id:"alternativas-consideradas",level:3},{value:"Decisi\xf3n",id:"decisi\xf3n",level:3},{value:"Arquitectura de Providers",id:"arquitectura-de-providers",level:3},{value:"Provider Selection Algorithm",id:"provider-selection-algorithm",level:3},{value:"Justificaci\xf3n",id:"justificaci\xf3n",level:3},{value:"Beneficios de Confiabilidad",id:"beneficios-de-confiabilidad",level:4},{value:"Optimizaci\xf3n de Costos",id:"optimizaci\xf3n-de-costos",level:4},{value:"Beneficios de Rendimiento",id:"beneficios-de-rendimiento",level:4},{value:"Consecuencias",id:"consecuencias",level:3},{value:"Positivas",id:"positivas",level:4},{value:"Negativas",id:"negativas",level:4},{value:"Mitigaciones",id:"mitigaciones",level:4},{value:"ADR-002: Database-based Messaging para Cloud Agnostic Queuing",id:"adr-002-database-based-messaging-para-cloud-agnostic-queuing",level:2},{value:"Contexto",id:"contexto-1",level:3},{value:"Alternativas Consideradas",id:"alternativas-consideradas-1",level:3},{value:"Decisi\xf3n",id:"decisi\xf3n-1",level:3},{value:"Database Message Architecture",id:"database-message-architecture",level:3},{value:"Queue Processing Implementation",id:"queue-processing-implementation",level:3},{value:"Configuraci\xf3n de Colas (Queue Configuration)",id:"configuraci\xf3n-de-colas-queue-configuration",level:3},{value:"Justificaci\xf3n de la Configuraci\xf3n de Colas",id:"justificaci\xf3n-de-la-configuraci\xf3n-de-colas",level:3},{value:"Beneficios de Portabilidad",id:"beneficios-de-portabilidad",level:4},{value:"Beneficios de Rendimiento",id:"beneficios-de-rendimiento-1",level:4},{value:"Beneficios de Migraci\xf3n",id:"beneficios-de-migraci\xf3n",level:4},{value:"Consecuencias de la Configuraci\xf3n de Colas",id:"consecuencias-de-la-configuraci\xf3n-de-colas",level:3},{value:"Positivas",id:"positivas-1",level:4},{value:"Negativas",id:"negativas-1",level:4},{value:"Mitigaciones",id:"mitigaciones-1",level:4},{value:"ADR-003: Liquid Template Engine para Personalization",id:"adr-003-liquid-template-engine-para-personalization",level:2},{value:"Contexto",id:"contexto-2",level:3},{value:"Alternativas Consideradas",id:"alternativas-consideradas-2",level:3},{value:"Decisi\xf3n",id:"decisi\xf3n-2",level:3},{value:"Template Architecture",id:"template-architecture",level:3},{value:"Custom Filters Implementation",id:"custom-filters-implementation",level:3},{value:"Security Configuration",id:"security-configuration",level:3},{value:"Justificaci\xf3n",id:"justificaci\xf3n-1",level:3},{value:"Beneficios Empresariales",id:"beneficios-empresariales",level:4},{value:"Beneficios T\xe9cnicos",id:"beneficios-t\xe9cnicos",level:4},{value:"Beneficios Operacionales",id:"beneficios-operacionales",level:4},{value:"Consecuencias",id:"consecuencias-1",level:3},{value:"Positivas",id:"positivas-2",level:4},{value:"Negativas",id:"negativas-2",level:4},{value:"Mitigaciones",id:"mitigaciones-2",level:4},{value:"ADR-004: Event-Driven Architecture con Domain Events",id:"adr-004-event-driven-architecture-con-domain-events",level:2},{value:"Contexto",id:"contexto-3",level:3},{value:"Event Types Design",id:"event-types-design",level:3},{value:"Event Publishing Pattern",id:"event-publishing-pattern",level:3},{value:"Event Consumers",id:"event-consumers",level:3},{value:"Justificaci\xf3n",id:"justificaci\xf3n-2",level:3},{value:"Beneficios de Arquitectura",id:"beneficios-de-arquitectura",level:4},{value:"Beneficios Empresariales",id:"beneficios-empresariales-1",level:4},{value:"Consecuencias",id:"consecuencias-2",level:3},{value:"Positivas",id:"positivas-3",level:4},{value:"Negativas",id:"negativas-3",level:4},{value:"Mitigaciones",id:"mitigaciones-3",level:4},{value:"ADR-005: Librer\xeda NuGet Multi-cloud para Configuraciones y Secretos",id:"adr-005-librer\xeda-nuget-multi-cloud-para-configuraciones-y-secretos",level:2},{value:"Contexto",id:"contexto-4",level:3},{value:"Alternativas Consideradas",id:"alternativas-consideradas-3",level:3},{value:"Decisi\xf3n",id:"decisi\xf3n-3",level:3},{value:"Arquitectura de la Librer\xeda",id:"arquitectura-de-la-librer\xeda",level:3},{value:"Cloud Provider Implementations",id:"cloud-provider-implementations",level:3},{value:"Dependency Injection Setup",id:"dependency-injection-setup",level:3},{value:"Usage Examples",id:"usage-examples",level:3},{value:"NuGet Package Structure",id:"nuget-package-structure",level:3},{value:"Justificaci\xf3n",id:"justificaci\xf3n-3",level:3},{value:"Beneficios de Portabilidad",id:"beneficios-de-portabilidad-1",level:4},{value:"Beneficios Operacionales",id:"beneficios-operacionales-1",level:4},{value:"Beneficios de Costo",id:"beneficios-de-costo",level:4},{value:"Consecuencias",id:"consecuencias-3",level:3},{value:"Positivas",id:"positivas-4",level:4},{value:"Negativas",id:"negativas-4",level:4},{value:"Mitigaciones",id:"mitigaciones-4",level:4}];function o(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"9-decisiones-de-arquitectura",children:"9. Decisiones de arquitectura"})}),"\n",(0,r.jsx)(n.h2,{id:"91-decisiones-principales",children:"9.1 Decisiones principales"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"ADR"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"}),(0,r.jsx)(n.th,{children:"Estado"}),(0,r.jsx)(n.th,{children:"Justificaci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ADR-001"})}),(0,r.jsx)(n.td,{children:"CQRS API + Processor"}),(0,r.jsx)(n.td,{children:"Aceptado"}),(0,r.jsx)(n.td,{children:"Separaci\xf3n responsabilidades"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ADR-002"})}),(0,r.jsx)(n.td,{children:"Redis como cola"}),(0,r.jsx)(n.td,{children:"Aceptado"}),(0,r.jsx)(n.td,{children:"Rendimiento"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ADR-003"})}),(0,r.jsx)(n.td,{children:"RazorEngine plantillas"}),(0,r.jsx)(n.td,{children:"Aceptado"}),(0,r.jsx)(n.td,{children:"Flexibilidad"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"ADR-004"})}),(0,r.jsx)(n.td,{children:"Multi-canal handlers"}),(0,r.jsx)(n.td,{children:"Aceptado"}),(0,r.jsx)(n.td,{children:"Extensibilidad"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"92-alternativas-evaluadas",children:"9.2 Alternativas evaluadas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Componente"}),(0,r.jsx)(n.th,{children:"Alternativas"}),(0,r.jsx)(n.th,{children:"Selecci\xf3n"}),(0,r.jsx)(n.th,{children:"Raz\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Cola"})}),(0,r.jsx)(n.td,{children:"RabbitMQ, Redis, SQS"}),(0,r.jsx)(n.td,{children:"Redis"}),(0,r.jsx)(n.td,{children:"Simplicidad"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Plantillas"})}),(0,r.jsx)(n.td,{children:"Liquid, Handlebars, Razor"}),(0,r.jsx)(n.td,{children:"RazorEngine"}),(0,r.jsx)(n.td,{children:".NET nativo"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Storage"})}),(0,r.jsx)(n.td,{children:"S3, EFS, Database"}),(0,r.jsx)(n.td,{children:"EFS"}),(0,r.jsx)(n.td,{children:"Compartido"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Canales"})}),(0,r.jsx)(n.td,{children:"Monol\xedtico, Handlers"}),(0,r.jsx)(n.td,{children:"Handlers"}),(0,r.jsx)(n.td,{children:"Modularidad"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Esta secci\xf3n documenta las decisiones arquitect\xf3nicas m\xe1s importantes del ",(0,r.jsx)(n.strong,{children:"Sistema de Notificaciones"})," utilizando el formato ADR (Architecture Decision Record), proporcionando contexto, justificaci\xf3n y consecuencias de cada decisi\xf3n."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Notification System Architecture",src:i(52774).A+"",width:"5575",height:"2313"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Diagrama C4 - Arquitectura general del Sistema de Notificaciones mostrando las decisiones arquitect\xf3nicas implementadas y sus relaciones."})}),"\n",(0,r.jsx)(n.h2,{id:"resumen-de-decisiones-arquitect\xf3nicas",children:"Resumen de Decisiones Arquitect\xf3nicas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"#"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"}),(0,r.jsx)(n.th,{children:"Estado"}),(0,r.jsx)(n.th,{children:"Impacto"}),(0,r.jsx)(n.th,{children:"Fecha"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ADR-001"}),(0,r.jsx)(n.td,{children:"Estrategia Multi-Proveedor"}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"2024-01-15"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ADR-002"}),(0,r.jsx)(n.td,{children:"Mensajer\xeda Basada en Base de Datos"}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"2024-01-25"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ADR-003"}),(0,r.jsx)(n.td,{children:"Motor de Plantillas Liquid"}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"2024-02-05"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ADR-004"}),(0,r.jsx)(n.td,{children:"Arquitectura Dirigida por Eventos"}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"2024-02-10"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ADR-005"}),(0,r.jsx)(n.td,{children:"Librer\xeda NuGet Multi-nube"}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"2024-02-15"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"principios-arquitect\xf3nicos",children:"Principios Arquitect\xf3nicos"}),"\n",(0,r.jsx)(n.p,{children:"Las decisiones arquitect\xf3nicas del Sistema de Notificaciones siguen los principios de:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Agn\xf3stico de Nube:"})," Portabilidad total entre AWS, Azure y GCP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contenedores Primero:"})," Optimizado para despliegue en contenedores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mensajer\xeda Centrada en Base de Datos:"})," Colas basadas en PostgreSQL para independencia de nube"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-tenant:"})," Soporte nativo para m\xfaltiples inquilinos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dirigido por Eventos:"})," Comunicaci\xf3n as\xedncrona mediante eventos de dominio"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sin Dependencia de Proveedor:"})," Abstracci\xf3n completa de proveedores de nube"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"adr-001-estrategia-multi-proveedor-para-confiabilidad",children:"ADR-001: Estrategia Multi-Proveedor para Confiabilidad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Campo"}),(0,r.jsx)(n.th,{children:"Valor"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Estado"})}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fecha"})}),(0,r.jsx)(n.td,{children:"2024-01-20"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Decidido por"})}),(0,r.jsx)(n.td,{children:"Equipo de Arquitectura + Operations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Stakeholders"})}),(0,r.jsx)(n.td,{children:"Equipo de Negocio, DevOps, Finanzas"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"contexto",children:"Contexto"}),"\n",(0,r.jsx)(n.p,{children:"El servicio de notificaciones maneja comunicaciones cr\xedticas para el negocio (alertas de vuelos, confirmaciones de reserva, notificaciones de emergencia) que requieren:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alta disponibilidad:"})," 99.9% tiempo de actividad"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Escalabilidad:"})," 100K+ mensajes/d\xeda por tenant"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cobertura global:"})," Soporte para 4 pa\xedses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimizaci\xf3n de costos:"})," Mejores tarifas mediante diversificaci\xf3n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternativas-consideradas",children:"Alternativas Consideradas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Enfoque"}),(0,r.jsx)(n.th,{children:"Pros"}),(0,r.jsx)(n.th,{children:"Contras"}),(0,r.jsx)(n.th,{children:"Costo Anual"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Single provider"})}),(0,r.jsx)(n.td,{children:"Simple, menos integraciones"}),(0,r.jsx)(n.td,{children:"Single point of failure"}),(0,r.jsx)(n.td,{children:"$50K"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Multi-provider manual"})}),(0,r.jsx)(n.td,{children:"Control total"}),(0,r.jsx)(n.td,{children:"Complejidad operacional"}),(0,r.jsx)(n.td,{children:"$60K"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Multi-provider autom\xe1tico"})}),(0,r.jsx)(n.td,{children:"Alta disponibilidad, costo optimizado"}),(0,r.jsx)(n.td,{children:"Complejidad t\xe9cnica"}),(0,r.jsx)(n.td,{children:"$45K"}),(0,r.jsxs)(n.td,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Seleccionado"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Provider aggregation service"})}),(0,r.jsx)(n.td,{children:"Menor complejidad"}),(0,r.jsx)(n.td,{children:"Vendor lock-in, latencia"}),(0,r.jsx)(n.td,{children:"$80K"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"decisi\xf3n",children:"Decisi\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementar estrategia multi-provider con failover autom\xe1tico"})," para cada canal de notificaci\xf3n."]}),"\n",(0,r.jsx)(n.h3,{id:"arquitectura-de-providers",children:"Arquitectura de Providers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Email Providers:\n  Primary: SendGrid\n    - Capacity: 100K emails/day\n    - Regions: Global\n    - SLA: 99.95%\n\n  Secondary: Amazon SES\n    - Capacity: 200K emails/day\n    - Regions: AWS regions\n    - SLA: 99.9%\n\n  Tertiary: Mailgun\n    - Capacity: 50K emails/day\n    - Regions: US, EU\n    - SLA: 99.5%\n\nSMS Providers:\n  Primary: Twilio\n    - Coverage: 180+ countries\n    - Features: 2-way SMS, delivery receipts\n    - SLA: 99.95%\n\n  Secondary: Amazon SNS\n    - Coverage: AWS supported regions\n    - Features: Basic SMS\n    - SLA: 99.9%\n\nPush Notification Providers:\n  Primary: Firebase Cloud Messaging\n    - Platforms: iOS, Android, Web\n    - Features: Rich notifications\n    - SLA: 99.9%\n\n  Secondary: Azure Notification Hubs\n    - Platforms: All major platforms\n    - Features: Template-based\n    - SLA: 99.9%\n\nWhatsApp Providers:\n  Primary: Twilio Business API\n    - Features: Templates, media\n    - Approval: WhatsApp verified\n    - SLA: 99.5%\n\n  Secondary: 360Dialog\n    - Features: Basic messaging\n    - Approval: WhatsApp verified\n    - SLA: 99.0%\n"})}),"\n",(0,r.jsx)(n.h3,{id:"provider-selection-algorithm",children:"Provider Selection Algorithm"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class ProviderSelector\n{\n    public async Task<INotificationProvider> SelectProviderAsync(\n        NotificationChannel channel,\n        string tenantId)\n    {\n        var providers = await GetAvailableProvidersAsync(channel, tenantId);\n\n        foreach (var provider in providers.OrderBy(p => p.Priority))\n        {\n            var healthCheck = await provider.CheckHealthAsync();\n            if (healthCheck.IsHealthy)\n            {\n                var capacity = await provider.GetCurrentCapacityAsync();\n                if (capacity.CanAcceptMoreRequests)\n                {\n                    return provider;\n                }\n            }\n        }\n\n        throw new NoAvailableProviderException(channel);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"justificaci\xf3n",children:"Justificaci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-confiabilidad",children:"Beneficios de Confiabilidad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Eliminaci\xf3n SPOF:"})," No hay dependencia cr\xedtica de un solo proveedor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failover autom\xe1tico:"})," Cambio en < 30 segundos ante fallos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoreo de salud:"})," Monitoreo proactivo del estado del proveedor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Redundancia geogr\xe1fica:"})," Proveedores en diferentes regiones"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"optimizaci\xf3n-de-costos",children:"Optimizaci\xf3n de Costos"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Negociaci\xf3n de tarifas:"})," Mejores tarifas por volumen distribuido"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enrutamiento din\xe1mico:"})," Enrutamiento autom\xe1tico al proveedor m\xe1s econ\xf3mico"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimizaci\xf3n de volumen:"})," Distribuci\xf3n de carga seg\xfan niveles de precios"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reducci\xf3n de desperdicio:"})," Evita sobre-aprovisionamiento en un solo proveedor"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-rendimiento",children:"Beneficios de Rendimiento"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Distribuci\xf3n de carga:"})," Carga distribuida reduce latencia"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimizaci\xf3n regional:"})," Proveedor m\xe1s cercano geogr\xe1ficamente"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Escalado de capacidad:"})," Suma de capacidades de todos los proveedores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enrutamiento de calidad:"})," Enrutamiento basado en tasas de \xe9xito de entrega"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consecuencias",children:"Consecuencias"}),"\n",(0,r.jsx)(n.h4,{id:"positivas",children:"Positivas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Alta disponibilidad:"})," 99.95% uptime vs 99.5% single provider"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Optimizaci\xf3n costos:"})," 15% reducci\xf3n en costos totales"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Escalabilidad:"})," 5x capacidad agregada"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Flexibilidad:"})," F\xe1cil incorporaci\xf3n de nuevos providers"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"negativas",children:"Negativas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Complejidad t\xe9cnica:"})," Abstraction layer y orchestration logic"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Sobrecarga operacional:"})," Monitoreo y gesti\xf3n de m\xfaltiples APIs"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Complejidad de pruebas:"})," Pruebas de escenarios de failover"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Desviaci\xf3n de configuraci\xf3n:"})," Riesgo de inconsistencias entre proveedores"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigaciones",children:"Mitigaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Capa de abstracci\xf3n:"})," Interfaz unificada para todos los proveedores"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Pruebas automatizadas:"})," Verificaciones diarias de salud y pruebas de failover"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Gesti\xf3n de configuraci\xf3n:"})," GitOps para configuraci\xf3n centralizada"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Panel de monitoreo:"})," Vista unificada de todos los proveedores"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"adr-002-database-based-messaging-para-cloud-agnostic-queuing",children:"ADR-002: Database-based Messaging para Cloud Agnostic Queuing"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Campo"}),(0,r.jsx)(n.th,{children:"Valor"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Estado"})}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fecha"})}),(0,r.jsx)(n.td,{children:"2024-01-25"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Decidido por"})}),(0,r.jsx)(n.td,{children:"Platform Team + Architecture"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Impacto"})}),(0,r.jsx)(n.td,{children:"Alto - Core messaging infrastructure"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"contexto-1",children:"Contexto"}),"\n",(0,r.jsx)(n.p,{children:"El sistema de notificaciones requiere un message broker que soporte:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cloud agnostic:"})," Portabilidad entre AWS, Azure, GCP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alto capacidad de procesamiento:"})," 1M+ mensajes/d\xeda"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Durabilidad:"})," Retenci\xf3n configurable para auditoria"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paralelismo:"})," Processing concurrente por m\xfaltiples consumers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ordering:"})," Garant\xedas de orden por tenant/usuario"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Future migration path:"})," Posibilidad de migrar a colas dedicadas"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternativas-consideradas-1",children:"Alternativas Consideradas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Technology"}),(0,r.jsx)(n.th,{children:"Portabilidad"}),(0,r.jsx)(n.th,{children:"Durability"}),(0,r.jsx)(n.th,{children:"Ordering"}),(0,r.jsx)(n.th,{children:"Complexity"}),(0,r.jsx)(n.th,{children:"Cost"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Database Messages"})}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"Excelente"}),(0,r.jsx)(n.td,{children:"Garantizada"}),(0,r.jsx)(n.td,{children:"Baja"}),(0,r.jsx)(n.td,{children:"Bajo"}),(0,r.jsxs)(n.td,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Seleccionado"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Amazon SNS + SQS"})}),(0,r.jsx)(n.td,{children:"\u274c AWS only"}),(0,r.jsx)(n.td,{children:"Excelente"}),(0,r.jsx)(n.td,{children:"FIFO limited"}),(0,r.jsx)(n.td,{children:"Media"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"RabbitMQ"})}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"Buena"}),(0,r.jsx)(n.td,{children:"Cola"}),(0,r.jsx)(n.td,{children:"Media"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Considerado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Amazon MQ"})}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Multi-cloud"}),(0,r.jsx)(n.td,{children:"Buena"}),(0,r.jsx)(n.td,{children:"Limited"}),(0,r.jsx)(n.td,{children:"Media"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Event Bus"})}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"Excelente"}),(0,r.jsx)(n.td,{children:"Partici\xf3n"}),(0,r.jsx)(n.td,{children:"Alta"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"\u2705 Abstracci\xf3n agn\xf3stica"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"decisi\xf3n-1",children:"Decisi\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Adoptar Database-based messaging como broker principal"})," con migraci\xf3n futura planificada a colas dedicadas."]}),"\n",(0,r.jsx)(n.h3,{id:"database-message-architecture",children:"Database Message Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Message Queue Tables\nCREATE TABLE message_queues (\n    id BIGSERIAL PRIMARY KEY,\n    queue_name VARCHAR(100) NOT NULL,\n    tenant_id VARCHAR(50) NOT NULL,\n    message_id UUID NOT NULL UNIQUE,\n    payload JSONB NOT NULL,\n    priority INTEGER DEFAULT 5,\n    retry_count INTEGER DEFAULT 0,\n    max_retries INTEGER DEFAULT 3,\n    scheduled_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    processed_at TIMESTAMP WITH TIME ZONE NULL,\n    status VARCHAR(20) DEFAULT 'pending', -- pending, processing, completed, failed, dead_letter\n    processor_id VARCHAR(100) NULL,\n    correlation_id VARCHAR(100) NULL,\n\n    INDEX idx_queue_status_scheduled (queue_name, status, scheduled_at),\n    INDEX idx_tenant_status (tenant_id, status),\n    INDEX idx_correlation (correlation_id)\n);\n\n-- Dead Letter Queue\nCREATE TABLE dead_letter_queue (\n    id BIGSERIAL PRIMARY KEY,\n    original_message_id UUID NOT NULL,\n    queue_name VARCHAR(100) NOT NULL,\n    tenant_id VARCHAR(50) NOT NULL,\n    payload JSONB NOT NULL,\n    failure_reason TEXT,\n    failed_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    retry_count INTEGER,\n\n    INDEX idx_tenant_failed_at (tenant_id, failed_at),\n    INDEX idx_original_message (original_message_id)\n);\n\n-- Message Processing Locks\nCREATE TABLE message_locks (\n    message_id UUID PRIMARY KEY,\n    processor_id VARCHAR(100) NOT NULL,\n    locked_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    expires_at TIMESTAMP WITH TIME ZONE NOT NULL,\n\n    INDEX idx_expires_at (expires_at)\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"queue-processing-implementation",children:"Queue Processing Implementation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public class DatabaseMessageQueue : IMessageQueue\n{\n    private readonly IDbConnection _connection;\n    private readonly ILogger<DatabaseMessageQueue> _logger;\n    private readonly IConfiguration _config;\n\n    public async Task<bool> EnqueueAsync<T>(string queueName, T message,\n        MessageOptions options = null) where T : class\n    {\n        var messageId = Guid.NewGuid();\n        var payload = JsonSerializer.Serialize(message);\n\n        const string sql = @"\n            INSERT INTO message_queues\n            (queue_name, tenant_id, message_id, payload, priority, max_retries,\n             scheduled_at, correlation_id)\n            VALUES (@QueueName, @TenantId, @MessageId, @Payload::jsonb,\n                   @Priority, @MaxRetries, @ScheduledAt, @CorrelationId)";\n\n        var result = await _connection.ExecuteAsync(sql, new\n        {\n            QueueName = queueName,\n            TenantId = options?.TenantId ?? "default",\n            MessageId = messageId,\n            Payload = payload,\n            Priority = options?.Priority ?? 5,\n            MaxRetries = options?.MaxRetries ?? 3,\n            ScheduledAt = options?.ScheduledAt ?? DateTime.UtcNow,\n            CorrelationId = options?.CorrelationId\n        });\n\n        return result > 0;\n    }\n\n    public async Task<QueueMessage<T>> DequeueAsync<T>(string queueName,\n        string processorId, CancellationToken cancellationToken = default) where T : class\n    {\n        using var transaction = await _connection.BeginTransactionAsync();\n\n        try\n        {\n            // Atomic dequeue with locking\n            const string dequeueSql = @"\n                WITH next_message AS (\n                    SELECT id, message_id, payload, retry_count, correlation_id\n                    FROM message_queues\n                    WHERE queue_name = @QueueName\n                      AND status = \'pending\'\n                      AND scheduled_at <= NOW()\n                      AND NOT EXISTS (\n                          SELECT 1 FROM message_locks l\n                          WHERE l.message_id = message_queues.message_id\n                            AND l.expires_at > NOW()\n                      )\n                    ORDER BY priority DESC, created_at ASC\n                    LIMIT 1\n                    FOR UPDATE SKIP LOCKED\n                )\n                UPDATE message_queues\n                SET status = \'processing\', processor_id = @ProcessorId\n                FROM next_message\n                WHERE message_queues.id = next_message.id\n                RETURNING message_queues.id, message_queues.message_id,\n                         message_queues.payload, message_queues.retry_count,\n                         message_queues.correlation_id";\n\n            var messageData = await _connection.QueryFirstOrDefaultAsync(dequeueSql, new\n            {\n                QueueName = queueName,\n                ProcessorId = processorId\n            }, transaction);\n\n            if (messageData == null)\n            {\n                await transaction.RollbackAsync();\n                return null;\n            }\n\n            // Create processing lock\n            const string lockSql = @"\n                INSERT INTO message_locks (message_id, processor_id, expires_at)\n                VALUES (@MessageId, @ProcessorId, @ExpiresAt)\n                ON CONFLICT (message_id) DO UPDATE\n                SET processor_id = EXCLUDED.processor_id,\n                    expires_at = EXCLUDED.expires_at";\n\n            await _connection.ExecuteAsync(lockSql, new\n            {\n                MessageId = messageData.message_id,\n                ProcessorId = processorId,\n                ExpiresAt = DateTime.UtcNow.AddMinutes(5) // 5 min processing timeout\n            }, transaction);\n\n            await transaction.CommitAsync();\n\n            var payload = JsonSerializer.Deserialize<T>(messageData.payload);\n            return new QueueMessage<T>\n            {\n                Id = messageData.id,\n                MessageId = messageData.message_id,\n                Payload = payload,\n                RetryCount = messageData.retry_count,\n                CorrelationId = messageData.correlation_id\n            };\n        }\n        catch\n        {\n            await transaction.RollbackAsync();\n            throw;\n        }\n    }\n\n    public async Task<bool> CompleteAsync(Guid messageId)\n    {\n        using var transaction = await _connection.BeginTransactionAsync();\n\n        try\n        {\n            // Mark as completed\n            const string completeSql = @"\n                UPDATE message_queues\n                SET status = \'completed\', processed_at = NOW()\n                WHERE message_id = @MessageId";\n\n            await _connection.ExecuteAsync(completeSql, new { MessageId = messageId }, transaction);\n\n            // Remove lock\n            const string unlockSql = "DELETE FROM message_locks WHERE message_id = @MessageId";\n            await _connection.ExecuteAsync(unlockSql, new { MessageId = messageId }, transaction);\n\n            await transaction.CommitAsync();\n            return true;\n        }\n        catch\n        {\n            await transaction.RollbackAsync();\n            throw;\n        }\n    }\n\n    public async Task<bool> FailAsync(Guid messageId, string reason)\n    {\n        using var transaction = await _connection.BeginTransactionAsync();\n\n        try\n        {\n            // Increment retry count or move to DLQ\n            const string failSql = @"\n                UPDATE message_queues\n                SET retry_count = retry_count + 1,\n                    status = CASE\n                        WHEN retry_count + 1 >= max_retries THEN \'dead_letter\'\n                        ELSE \'pending\'\n                    END,\n                    scheduled_at = CASE\n                        WHEN retry_count + 1 < max_retries\n                        THEN NOW() + (INTERVAL \'1 minute\' * POWER(2, retry_count + 1))\n                        ELSE scheduled_at\n                    END\n                WHERE message_id = @MessageId\n                RETURNING retry_count, max_retries, payload, queue_name, tenant_id";\n\n            var result = await _connection.QueryFirstOrDefaultAsync(failSql,\n                new { MessageId = messageId }, transaction);\n\n            // Move to dead letter queue if max retries exceeded\n            if (result != null && result.retry_count >= result.max_retries)\n            {\n                const string dlqSql = @"\n                    INSERT INTO dead_letter_queue\n                    (original_message_id, queue_name, tenant_id, payload,\n                     failure_reason, retry_count)\n                    VALUES (@MessageId, @QueueName, @TenantId, @Payload::jsonb,\n                           @Reason, @RetryCount)";\n\n                await _connection.ExecuteAsync(dlqSql, new\n                {\n                    MessageId = messageId,\n                    QueueName = result.queue_name,\n                    TenantId = result.tenant_id,\n                    Payload = result.payload,\n                    Reason = reason,\n                    RetryCount = result.retry_count\n                }, transaction);\n            }\n\n            // Remove lock\n            await _connection.ExecuteAsync(\n                "DELETE FROM message_locks WHERE message_id = @MessageId",\n                new { MessageId = messageId }, transaction);\n\n            await transaction.CommitAsync();\n            return true;\n        }\n        catch\n        {\n            await transaction.RollbackAsync();\n            throw;\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"configuraci\xf3n-de-colas-queue-configuration",children:"Configuraci\xf3n de Colas (Queue Configuration)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Definici\xf3n de colas para el Servicio de Notificaciones\nNotificationQueues:\n  email-notifications:\n    priority_levels: [1, 5, 10]  # low, normal, high\n    max_retries: 3\n    retry_backoff: exponential\n    batch_size: 50\n    processing_timeout: 300s  # 5 minutos\n\n  sms-notifications:\n    priority_levels: [1, 5, 10]\n    max_retries: 5\n    retry_backoff: exponential\n    batch_size: 100\n    processing_timeout: 120s  # 2 minutos\n\n  push-notifications:\n    priority_levels: [1, 5, 10]\n    max_retries: 3\n    retry_backoff: linear\n    batch_size: 200\n    processing_timeout: 60s   # 1 minuto\n\n  whatsapp-notifications:\n    priority_levels: [1, 5, 10]\n    max_retries: 3\n    retry_backoff: exponential\n    batch_size: 25\n    processing_timeout: 180s  # 3 minutos\n\n# Estrategia de migraci\xf3n a colas dedicadas\nMigrationStrategy:\n  phase_1: "Colas en base de datos para implementaci\xf3n inicial"\n  phase_2: "Evaluar proveedores de colas cloud-agnostic"\n  phase_3: "Implementar patr\xf3n adaptador para migraci\xf3n sencilla"\n  phase_4: "Cambio a servicio de colas dedicado sin downtime"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"justificaci\xf3n-de-la-configuraci\xf3n-de-colas",children:"Justificaci\xf3n de la Configuraci\xf3n de Colas"}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-portabilidad",children:"Beneficios de Portabilidad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cloud Agnostic:"})," Funciona en cualquier nube con ",(0,r.jsx)(n.code,{children:"PostgreSQL"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sin Vendor Lock-in:"})," SQL est\xe1ndar, migraci\xf3n f\xe1cil"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Listo para Contenedores:"})," Base de datos portable en contenedores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Costo Predecible:"})," Sin precio por mensaje"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-rendimiento-1",children:"Beneficios de Rendimiento"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transacciones ACID:"})," Consistencia fuerte garantizada"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Indexaci\xf3n:"})," Consultas optimizadas para operaciones de dequeue"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Procesamiento en lotes:"})," Operaciones bulk eficientes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pooling de conexiones:"})," Conexiones de base de datos optimizadas"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-migraci\xf3n",children:"Beneficios de Migraci\xf3n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ruta futura:"})," Migraci\xf3n f\xe1cil a servicios de cola dedicados"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patr\xf3n Adaptador:"})," Abstracci\xf3n de interfaz para implementaci\xf3n de colas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mitigaci\xf3n de riesgos:"})," Comenzar simple, evolucionar complejidad"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aprendizaje operacional:"})," El equipo aprende patrones de mensajes primero"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consecuencias-de-la-configuraci\xf3n-de-colas",children:"Consecuencias de la Configuraci\xf3n de Colas"}),"\n",(0,r.jsx)(n.h4,{id:"positivas-1",children:"Positivas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Portabilidad completa:"})," Cloud agnostic desde d\xeda 1"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Simplicidad operacional:"})," Una tecnolog\xeda menos que administrar"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Durabilidad garantizada:"})," ACID transactions, backup incluido"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Cost effectiveness:"})," No costos adicionales de queue service"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Debugging simplicity:"})," SQL queries para resoluci\xf3n de problemas"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Migration ready:"})," Clear path para evoluci\xf3n futura"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"negativas-1",children:"Negativas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Database load:"})," Additional queries en database principal"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Scaling limitations:"})," Database bottleneck en high volumes"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Feature gaps:"})," No advanced queue features inicialmente"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Polling overhead:"})," Requires periodic dequeue polling"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigaciones-1",children:"Mitigaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"R\xe9plicas de lectura:"})," Separar procesamiento de colas del workload principal"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Particionamiento:"})," Particionamiento de tablas por tenant y fecha"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Monitoreo:"})," M\xe9tricas de profundidad de cola y tiempo de procesamiento"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Patr\xf3n adaptador:"})," Interfaz preparada para migraci\xf3n"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Pruebas de rendimiento:"})," Pruebas de carga regulares para identificar l\xedmites"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Planificaci\xf3n de migraci\xf3n:"})," Hoja de ruta definida para servicios de cola"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"adr-003-liquid-template-engine-para-personalization",children:"ADR-003: Liquid Template Engine para Personalization"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Campo"}),(0,r.jsx)(n.th,{children:"Valor"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Estado"})}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fecha"})}),(0,r.jsx)(n.td,{children:"2024-02-05"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Decidido por"})}),(0,r.jsx)(n.td,{children:"Product Team + Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Relacionado con"})}),(0,r.jsx)(n.td,{children:"ADR-005 (Multi-language Support)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"contexto-2",children:"Contexto"}),"\n",(0,r.jsx)(n.p,{children:"El sistema requiere un template engine que permita:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Business user friendly:"})," No-code template editing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rich templating:"})," Condicionales, loops, filters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security:"})," Sandboxed execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance:"})," Fast rendering para high volume"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extensibility:"})," Custom filters y funciones"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternativas-consideradas-2",children:"Alternativas Consideradas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Template Engine"}),(0,r.jsx)(n.th,{children:"Syntax"}),(0,r.jsx)(n.th,{children:"Security"}),(0,r.jsx)(n.th,{children:"Performance"}),(0,r.jsx)(n.th,{children:"Learning Curve"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Liquid"})}),(0,r.jsx)(n.td,{children:"Intuitive"}),(0,r.jsx)(n.td,{children:"Sandboxed"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"Bajo"}),(0,r.jsxs)(n.td,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Seleccionado"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Handlebars"})}),(0,r.jsx)(n.td,{children:"Simple"}),(0,r.jsx)(n.td,{children:"Limited"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"Bajo"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Razor"})}),(0,r.jsx)(n.td,{children:"Powerful"}),(0,r.jsx)(n.td,{children:"Code injection risk"}),(0,r.jsx)(n.td,{children:"Muy Alto"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Mustache"})}),(0,r.jsx)(n.td,{children:"Minimal"}),(0,r.jsx)(n.td,{children:"Safe"}),(0,r.jsx)(n.td,{children:"Alto"}),(0,r.jsx)(n.td,{children:"Muy Bajo"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Jinja2"})}),(0,r.jsx)(n.td,{children:"Feature-rich"}),(0,r.jsx)(n.td,{children:"Configurable"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"Medio"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"decisi\xf3n-2",children:"Decisi\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Adoptar Liquid Template Engine"})," con extensiones custom para casos de uso espec\xedficos."]}),"\n",(0,r.jsx)(n.h3,{id:"template-architecture",children:"Template Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-liquid",children:"\x3c!-- Email template example --\x3e\n<!DOCTYPE html>\n<html>\n<head>\n    <title>{{ flight.title | escape }}</title>\n</head>\n<body>\n    {% assign user_name = user.firstName | default: \"Estimado pasajero\" %}\n\n    <h1>{{ 'email.greeting' | t: name: user_name }}</h1>\n\n    {% if flight.status == 'delayed' %}\n        <div class=\"alert alert-warning\">\n            {{ 'flight.delayed_message' | t: delay_time: flight.delayMinutes }}\n        </div>\n    {% elsif flight.status == 'cancelled' %}\n        <div class=\"alert alert-danger\">\n            {{ 'flight.cancelled_message' | t }}\n        </div>\n    {% endif %}\n\n    <table class=\"flight-details\">\n        <tr>\n            <td>{{ 'flight.number' | t }}:</td>\n            <td>{{ flight.number }}</td>\n        </tr>\n        <tr>\n            <td>{{ 'flight.departure' | t }}:</td>\n            <td>{{ flight.departureTime | date: 'd/M/yyyy HH:mm' }}</td>\n        </tr>\n        {% if flight.gate %}\n        <tr>\n            <td>{{ 'flight.gate' | t }}:</td>\n            <td>{{ flight.gate }}</td>\n        </tr>\n        {% endif %}\n    </table>\n\n    {% for segment in flight.segments %}\n        <div class=\"segment\">\n            <h3>{{ segment.origin }} \u2192 {{ segment.destination }}</h3>\n            <p>{{ segment.departureTime | date: 'short' }}</p>\n        </div>\n    {% endfor %}\n\n    <footer>\n        {{ 'email.footer' | t: company: tenant.companyName }}\n    </footer>\n</body>\n</html>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-filters-implementation",children:"Custom Filters Implementation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public class CustomLiquidFilters\n{\n    public static string Translate(string key, object parameters = null)\n    {\n        var localizationService = ServiceLocator.GetService<ILocalizationService>();\n        return localizationService.GetLocalizedString(key, parameters);\n    }\n\n    public static string FormatCurrency(decimal amount, string currencyCode)\n    {\n        var culture = CultureInfo.GetCultureInfo(currencyCode);\n        return amount.ToString("C", culture);\n    }\n\n    public static string FormatPhone(string phoneNumber, string countryCode)\n    {\n        return PhoneNumberFormatter.Format(phoneNumber, countryCode);\n    }\n\n    public static string Qr(string content, int size = 200)\n    {\n        return QrCodeGenerator.GenerateDataUri(content, size);\n    }\n}\n\n// Registration\nTemplate.RegisterFilter("t", CustomLiquidFilters.Translate);\nTemplate.RegisterFilter("currency", CustomLiquidFilters.FormatCurrency);\nTemplate.RegisterFilter("phone", CustomLiquidFilters.FormatPhone);\nTemplate.RegisterFilter("qr", CustomLiquidFilters.Qr);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public class SecureLiquidTemplate\n{\n    private readonly Template _template;\n\n    public SecureLiquidTemplate(string templateContent)\n    {\n        var parseContext = new ParseContext\n        {\n            AllowedTags = new HashSet<string>\n            {\n                "assign", "if", "elsif", "else", "endif", "for", "endfor",\n                "case", "when", "endcase", "unless", "endunless"\n            },\n            AllowedFilters = new HashSet<string>\n            {\n                "escape", "date", "default", "t", "currency", "phone", "qr",\n                "upcase", "downcase", "capitalize", "truncate"\n            }\n        };\n\n        _template = Template.Parse(templateContent, parseContext);\n    }\n\n\n    public string Render(object data, int timeoutMs = 5000)\n    {\n        using var cts = new CancellationTokenSource(timeoutMs);\n        return _template.Render(Hash.FromAnonymousObject(data), cts.Token);\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"justificaci\xf3n-1",children:"Justificaci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-empresariales",children:"Beneficios Empresariales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Edici\xf3n sin c\xf3digo:"})," Los usuarios de negocio pueden crear plantillas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Funcionalidad rica:"})," L\xf3gica condicional, bucles, manipulaci\xf3n de datos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistencia de marca:"})," Herencia de plantillas y componentes compartidos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pruebas A/B:"})," Variaciones de plantillas f\xe1ciles"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-t\xe9cnicos",children:"Beneficios T\xe9cnicos"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Seguridad:"})," Ejecuci\xf3n en sandbox previene inyecci\xf3n de c\xf3digo"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rendimiento:"})," Plantillas compiladas con cach\xe9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mantenibilidad:"})," Separaci\xf3n clara l\xf3gica/presentaci\xf3n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extensibilidad:"})," Filtros personalizados para casos espec\xedficos"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-operacionales",children:"Beneficios Operacionales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Versionado de plantillas:"})," Gesti\xf3n de plantillas basada en Git"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capacidad de vista previa:"})," Pruebas seguras de plantillas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manejo de errores:"})," Degradaci\xf3n elegante con respaldos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rastro de auditor\xeda:"})," Uso de plantillas y seguimiento de cambios"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consecuencias-1",children:"Consecuencias"}),"\n",(0,r.jsx)(n.h4,{id:"positivas-2",children:"Positivas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Empowerment:"})," Business teams self-service capability"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Security:"})," Sandboxed execution environment"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Performance:"})," 5-10ms template rendering"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Flexibility:"})," Rich templating capabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"negativas-2",children:"Negativas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Learning curve:"})," Liquid syntax learning for business users"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Feature limitations:"})," Less powerful than full programming languages"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Debugging complexity:"})," Limited debugging capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Memory overhead:"})," Template compilation y caching"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigaciones-2",children:"Mitigaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Programa de capacitaci\xf3n:"})," Educaci\xf3n de usuarios de negocio en Liquid"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Biblioteca de plantillas:"})," Plantillas pre-construidas para escenarios comunes"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Editor visual:"})," Editor GUI para plantillas complejas"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Monitoreo de rendimiento:"})," M\xe9tricas de renderizado de plantillas"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"adr-004-event-driven-architecture-con-domain-events",children:"ADR-004: Event-Driven Architecture con Domain Events"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Campo"}),(0,r.jsx)(n.th,{children:"Valor"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Estado"})}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fecha"})}),(0,r.jsx)(n.td,{children:"2024-02-10"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Decidido por"})}),(0,r.jsx)(n.td,{children:"Architecture Team + Product"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Relacionado con"})}),(0,r.jsx)(n.td,{children:"ADR-002 (Kafka), ADR-006 (Audit Trail)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"contexto-3",children:"Contexto"}),"\n",(0,r.jsx)(n.p,{children:"El sistema debe integrar con m\xfaltiples servicios externos y internos, requiriendo:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Loose coupling:"})," Servicios independientes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time notifications:"})," Immediate response a eventos de negocio"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audit trail:"})," Complete history of all events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability:"})," Handle event bursts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration flexibility:"})," Easy addition of new consumers"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"event-types-design",children:"Event Types Design"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// Domain Events\npublic abstract class NotificationDomainEvent\n{\n    public Guid EventId { get; } = Guid.NewGuid();\n    public DateTime OccurredAt { get; } = DateTime.UtcNow;\n    public string TenantId { get; set; }\n    public string UserId { get; set; }\n    public string CorrelationId { get; set; }\n}\n\npublic class NotificationRequested : NotificationDomainEvent\n{\n    public string NotificationId { get; set; }\n    public NotificationChannel Channel { get; set; }\n    public string TemplateId { get; set; }\n    public Dictionary<string, object> Variables { get; set; }\n    public List<string> Recipients { get; set; }\n    public Priority Priority { get; set; }\n    public DateTime? ScheduledAt { get; set; }\n}\n\npublic class NotificationSent : NotificationDomainEvent\n{\n    public string NotificationId { get; set; }\n    public NotificationChannel Channel { get; set; }\n    public string ProviderId { get; set; }\n    public string ProviderMessageId { get; set; }\n    public int RecipientCount { get; set; }\n    public TimeSpan ProcessingDuration { get; set; }\n}\n\npublic class NotificationDelivered : NotificationDomainEvent\n{\n    public string NotificationId { get; set; }\n    public string RecipientId { get; set; }\n    public DateTime DeliveredAt { get; set; }\n    public string ProviderStatus { get; set; }\n}\n\npublic class NotificationFailed : NotificationDomainEvent\n{\n    public string NotificationId { get; set; }\n    public string RecipientId { get; set; }\n    public string ErrorCode { get; set; }\n    public string ErrorMessage { get; set; }\n    public bool IsRetryable { get; set; }\n    public int AttemptNumber { get; set; }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"event-publishing-pattern",children:"Event Publishing Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class NotificationService\n{\n    private readonly IEventPublisher _eventPublisher;\n    private readonly INotificationRepository _repository;\n\n    public async Task<NotificationResult> SendNotificationAsync(NotificationRequest request)\n    {\n        // Publish domain event\n        await _eventPublisher.PublishAsync(new NotificationRequested\n        {\n            NotificationId = request.Id,\n            Channel = request.Channel,\n            TemplateId = request.TemplateId,\n            Variables = request.Variables,\n            Recipients = request.Recipients,\n            TenantId = request.TenantId,\n            UserId = request.UserId\n        });\n\n        // Business logic continues...\n        var result = await ProcessNotificationAsync(request);\n\n        if (result.IsSuccess)\n        {\n            await _eventPublisher.PublishAsync(new NotificationSent\n            {\n                NotificationId = request.Id,\n                Channel = request.Channel,\n                ProviderId = result.ProviderId,\n                ProviderMessageId = result.ProviderMessageId,\n                RecipientCount = request.Recipients.Count,\n                ProcessingDuration = result.ProcessingDuration,\n                TenantId = request.TenantId\n            });\n        }\n        else\n        {\n            await _eventPublisher.PublishAsync(new NotificationFailed\n            {\n                NotificationId = request.Id,\n                ErrorCode = result.ErrorCode,\n                ErrorMessage = result.ErrorMessage,\n                IsRetryable = result.IsRetryable,\n                TenantId = request.TenantId\n            });\n        }\n\n        return result;\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"event-consumers",children:"Event Consumers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Event Consumers:\n  Analytics Consumer:\n    events: [NotificationSent, NotificationDelivered, NotificationFailed]\n    purpose: Business metrics and dashboards\n\n  Audit Consumer:\n    events: [All notification events]\n    purpose: Compliance and audit trail\n\n  Cost Tracking Consumer:\n    events: [NotificationSent]\n\n    purpose: Cost allocation per tenant\n\n  Retry Consumer:\n    events: [NotificationFailed]\n    purpose: Automatic retry logic\n\n\n  Webhook Consumer:\n    events: [NotificationDelivered, NotificationFailed]\n    purpose: Customer webhook notifications\n\n  Email Digest Consumer:\n    events: [NotificationFailed]\n    purpose: Daily failure summary emails\n"})}),"\n",(0,r.jsx)(n.h3,{id:"justificaci\xf3n-2",children:"Justificaci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-arquitectura",children:"Beneficios de Arquitectura"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desacoplamiento:"})," Los servicios se comunican v\xeda eventos, no llamadas directas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Escalabilidad:"})," Los consumidores de eventos pueden escalar independientemente"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Confiabilidad:"})," La persistencia de eventos garantiza que no haya p\xe9rdida de mensajes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibilidad:"})," F\xe1cil agregar nuevos consumidores de eventos"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-empresariales-1",children:"Beneficios Empresariales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Informaci\xf3n en tiempo real:"})," An\xe1lisis y monitoreo inmediatos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Transparencia del cliente:"})," Actualizaciones de estado en tiempo real"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cumplimiento de auditor\xeda:"})," Historial completo de eventos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Listo para integraci\xf3n:"})," Integraci\xf3n f\xe1cil del sistema externo"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consecuencias-2",children:"Consecuencias"}),"\n",(0,r.jsx)(n.h4,{id:"positivas-3",children:"Positivas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Loose coupling:"})," Services evolve independently"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Scalability:"})," Linear scaling with event volume"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Observability:"})," Complete system visibility"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Integration ease:"})," Plugin architecture"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"negativas-3",children:"Negativas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Eventual consistency:"})," No immediate consistency guarantees"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Debugging complexity:"})," Distributed tracing required"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Event schema evolution:"})," Backward compatibility challenges"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Operational overhead:"})," Event store management"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigaciones-3",children:"Mitigaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Event sourcing:"})," Reconstruir estado desde eventos"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Trazabilidad distribuida:"})," Implementaci\xf3n de OpenTelemetry"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Registro de esquemas:"})," Confluent Schema Registry"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Panel de monitoreo:"})," Visualizaci\xf3n del flujo de eventos"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"adr-005-librer\xeda-nuget-multi-cloud-para-configuraciones-y-secretos",children:"ADR-005: Librer\xeda NuGet Multi-cloud para Configuraciones y Secretos"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Campo"}),(0,r.jsx)(n.th,{children:"Valor"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Estado"})}),(0,r.jsx)(n.td,{children:"\u2705 Aprobado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fecha"})}),(0,r.jsx)(n.td,{children:"2024-02-15"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Decidido por"})}),(0,r.jsx)(n.td,{children:"Platform Team + Security"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Relacionado con"})}),(0,r.jsx)(n.td,{children:"ADR-001 (Multi-Provider), ADR-002 (Database Messaging)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"contexto-4",children:"Contexto"}),"\n",(0,r.jsxs)(n.p,{children:["La soluci\xf3n corporativa debe ser ",(0,r.jsx)(n.strong,{children:"cloud agnostic"})," y portable, requiriendo un mecanismo unificado de gesti\xf3n de configuraciones y secretos que soporte:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-cloud portability:"})," AWS, Azure, GCP"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration management:"})," Centralized, versioned, environment-aware"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Secret management:"})," Secure storage, rotation, audit trail"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Easy migration:"})," Cambio de cloud provider sin refactoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer experience:"})," Unified API across environments"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternativas-consideradas-3",children:"Alternativas Consideradas"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Soluci\xf3n"}),(0,r.jsx)(n.th,{children:"Portabilidad"}),(0,r.jsx)(n.th,{children:"Developer UX"}),(0,r.jsx)(n.th,{children:"Vendor Lock-in"}),(0,r.jsx)(n.th,{children:"Maintenance"}),(0,r.jsx)(n.th,{children:"Decisi\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Custom NuGet Library"})}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"\u2705 Excellent"}),(0,r.jsx)(n.td,{children:"\u274c None"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Internal"}),(0,r.jsxs)(n.td,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Seleccionado"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"AWS Secrets Manager"})}),(0,r.jsx)(n.td,{children:"\u274c AWS only"}),(0,r.jsx)(n.td,{children:"\u2705 Good"}),(0,r.jsx)(n.td,{children:"\u2705 Complete"}),(0,r.jsx)(n.td,{children:"\u2705 Managed"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Azure Key Vault"})}),(0,r.jsx)(n.td,{children:"\u274c Azure only"}),(0,r.jsx)(n.td,{children:"\u2705 Good"}),(0,r.jsx)(n.td,{children:"\u2705 Complete"}),(0,r.jsx)(n.td,{children:"\u2705 Managed"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"HashiCorp Vault"})}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Complex"}),(0,r.jsx)(n.td,{children:"\u274c None"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Self-managed"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Kubernetes Secrets"})}),(0,r.jsx)(n.td,{children:"\u2705 Platform"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Limited"}),(0,r.jsx)(n.td,{children:"\u274c None"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f K8s dependent"}),(0,r.jsx)(n.td,{children:"\u274c Rechazado"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"decisi\xf3n-3",children:"Decisi\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Desarrollar librer\xeda NuGet personalizada"})," que abstraiga la gesti\xf3n de configuraciones y secretos con soporte multi-cloud."]}),"\n",(0,r.jsx)(n.h3,{id:"arquitectura-de-la-librer\xeda",children:"Arquitectura de la Librer\xeda"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Core abstraction interfaces\npublic interface IConfigurationProvider\n{\n    Task<T> GetConfigurationAsync<T>(string key, string environment = null);\n    Task<string> GetSecretAsync(string secretName, string version = "latest");\n    Task SetConfigurationAsync<T>(string key, T value, string environment = null);\n    Task SetSecretAsync(string secretName, string secretValue, Dictionary<string, string> metadata = null);\n    Task<bool> DeleteSecretAsync(string secretName);\n}\n\npublic interface ICloudProvider\n{\n    string Name { get; }\n    Task<string> GetSecretValueAsync(string secretName, string version);\n    Task<string> GetConfigurationValueAsync(string configKey, string environment);\n    Task SetSecretValueAsync(string secretName, string value, Dictionary<string, string> metadata);\n    Task SetConfigurationValueAsync(string configKey, string value, string environment);\n    Task<bool> ValidateConnectionAsync();\n}\n\n// Multi-cloud configuration service\npublic class MultiCloudConfigurationService : IConfigurationProvider\n{\n    private readonly ICloudProvider _primaryProvider;\n    private readonly ICloudProvider _fallbackProvider;\n    private readonly IMemoryCache _cache;\n    private readonly ILogger<MultiCloudConfigurationService> _logger;\n\n    public MultiCloudConfigurationService(\n        ICloudProvider primaryProvider,\n        ICloudProvider fallbackProvider,\n        IMemoryCache cache,\n        ILogger<MultiCloudConfigurationService> logger)\n    {\n        _primaryProvider = primaryProvider;\n        _fallbackProvider = fallbackProvider;\n        _cache = cache;\n        _logger = logger;\n    }\n\n    public async Task<T> GetConfigurationAsync<T>(string key, string environment = null)\n    {\n        var cacheKey = $"config:{key}:{environment ?? "default"}";\n\n        if (_cache.TryGetValue(cacheKey, out T cachedValue))\n        {\n            return cachedValue;\n        }\n\n        try\n        {\n            var configValue = await _primaryProvider.GetConfigurationValueAsync(key, environment);\n            var result = JsonSerializer.Deserialize<T>(configValue);\n\n            _cache.Set(cacheKey, result, TimeSpan.FromMinutes(15));\n            return result;\n        }\n        catch (Exception ex) when (_fallbackProvider != null)\n        {\n            _logger.LogWarning(ex, "Primary provider failed for config {Key}, trying fallback", key);\n\n            var configValue = await _fallbackProvider.GetConfigurationValueAsync(key, environment);\n            var result = JsonSerializer.Deserialize<T>(configValue);\n\n            _cache.Set(cacheKey, result, TimeSpan.FromMinutes(5)); // Shorter cache for fallback\n            return result;\n        }\n    }\n\n    public async Task<string> GetSecretAsync(string secretName, string version = "latest")\n    {\n        var cacheKey = $"secret:{secretName}:{version}";\n\n        if (_cache.TryGetValue(cacheKey, out string cachedSecret))\n        {\n            return cachedSecret;\n        }\n\n        try\n        {\n            var secretValue = await _primaryProvider.GetSecretValueAsync(secretName, version);\n\n            // Shorter cache for secrets for security\n            _cache.Set(cacheKey, secretValue, TimeSpan.FromMinutes(5));\n            return secretValue;\n        }\n        catch (Exception ex) when (_fallbackProvider != null)\n        {\n            _logger.LogWarning(ex, "Primary provider failed for secret {SecretName}, trying fallback", secretName);\n\n            var secretValue = await _fallbackProvider.GetSecretValueAsync(secretName, version);\n            _cache.Set(cacheKey, secretValue, TimeSpan.FromMinutes(2)); // Even shorter for fallback secrets\n            return secretValue;\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"cloud-provider-implementations",children:"Cloud Provider Implementations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// AWS Secrets Manager + Parameter Store\npublic class AwsCloudProvider : ICloudProvider\n{\n    private readonly IAmazonSecretsManager _secretsManager;\n    private readonly IAmazonSimpleSystemsManagement _parameterStore;\n\n    public string Name => "AWS";\n\n    public async Task<string> GetSecretValueAsync(string secretName, string version)\n    {\n        var request = new GetSecretValueRequest\n        {\n            SecretId = secretName,\n            VersionStage = version == "latest" ? "AWSCURRENT" : version\n        };\n\n        var response = await _secretsManager.GetSecretValueAsync(request);\n        return response.SecretString;\n    }\n\n    public async Task<string> GetConfigurationValueAsync(string configKey, string environment)\n    {\n        var parameterName = environment != null ? $"/{environment}/{configKey}" : $"/{configKey}";\n\n        var request = new GetParameterRequest\n        {\n            Name = parameterName,\n            WithDecryption = true\n        };\n\n        var response = await _parameterStore.GetParameterAsync(request);\n        return response.Parameter.Value;\n    }\n}\n\n// Azure Key Vault + App Configuration\npublic class AzureCloudProvider : ICloudProvider\n{\n    private readonly SecretClient _secretClient;\n    private readonly ConfigurationClient _configClient;\n\n    public string Name => "Azure";\n\n    public async Task<string> GetSecretValueAsync(string secretName, string version)\n    {\n        var response = await _secretClient.GetSecretAsync(secretName, version);\n        return response.Value.Value;\n    }\n\n    public async Task<string> GetConfigurationValueAsync(string configKey, string environment)\n    {\n        var key = environment != null ? $"{environment}:{configKey}" : configKey;\n        var response = await _configClient.GetConfigurationSettingAsync(key);\n        return response.Value.Value;\n    }\n}\n\n// Google Cloud Secret Manager + Cloud Config\npublic class GoogleCloudProvider : ICloudProvider\n{\n    private readonly SecretManagerServiceClient _secretClient;\n\n    public string Name => "GoogleCloud";\n\n    public async Task<string> GetSecretValueAsync(string secretName, string version)\n    {\n        var request = new AccessSecretVersionRequest\n        {\n            Name = new SecretVersionName(\n                Environment.GetEnvironmentVariable("GOOGLE_CLOUD_PROJECT"),\n                secretName,\n                version == "latest" ? "latest" : version\n            ).ToString()\n        };\n\n        var response = await _secretClient.AccessSecretVersionAsync(request);\n        return response.Payload.Data.ToStringUtf8();\n    }\n\n    public async Task<string> GetConfigurationValueAsync(string configKey, string environment)\n    {\n        // Implementation using Google Cloud Config or Firestore\n        var fullKey = environment != null ? $"{environment}/{configKey}" : configKey;\n        // ... Google Cloud specific implementation\n        throw new NotImplementedException("Google Cloud configuration to be implemented");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dependency-injection-setup",children:"Dependency Injection Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Startup configuration\npublic void ConfigureServices(IServiceCollection services)\n{\n    // Register based on environment\n    var cloudProvider = Environment.GetEnvironmentVariable("CLOUD_PROVIDER") ?? "AWS";\n\n    switch (cloudProvider.ToUpper())\n    {\n        case "AWS":\n            services.AddSingleton<ICloudProvider, AwsCloudProvider>();\n            services.AddAWSService<IAmazonSecretsManager>();\n            services.AddAWSService<IAmazonSimpleSystemsManagement>();\n            break;\n\n        case "AZURE":\n            services.AddSingleton<ICloudProvider, AzureCloudProvider>();\n            services.AddSingleton(sp => new SecretClient(\n                new Uri(Environment.GetEnvironmentVariable("AZURE_KEY_VAULT_URL")),\n                new DefaultAzureCredential()));\n            break;\n\n        case "GCP":\n            services.AddSingleton<ICloudProvider, GoogleCloudProvider>();\n            services.AddSingleton<SecretManagerServiceClient>();\n            break;\n    }\n\n    // Configure fallback provider if specified\n    var fallbackProvider = Environment.GetEnvironmentVariable("FALLBACK_CLOUD_PROVIDER");\n    if (!string.IsNullOrEmpty(fallbackProvider))\n    {\n        // Register fallback provider...\n    }\n\n    services.AddSingleton<IConfigurationProvider, MultiCloudConfigurationService>();\n    services.AddMemoryCache();\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// In application services\npublic class NotificationService\n{\n    private readonly IConfigurationProvider _config;\n\n    public NotificationService(IConfigurationProvider config)\n    {\n        _config = config;\n    }\n\n    public async Task<EmailSettings> GetEmailSettingsAsync()\n    {\n        // Automatic cloud provider detection and caching\n        return await _config.GetConfigurationAsync<EmailSettings>("email-settings", "production");\n    }\n\n    public async Task<string> GetApiKeyAsync(string providerName)\n    {\n        // Secret retrieval with automatic fallback\n        return await _config.GetSecretAsync($"notification-providers/{providerName}/api-key");\n    }\n}\n\n// Configuration model\npublic class EmailSettings\n{\n    public string SmtpServer { get; set; }\n    public int Port { get; set; }\n    public bool UseSSL { get; set; }\n    public string FromAddress { get; set; }\n    public string FromName { get; set; }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nuget-package-structure",children:"NuGet Package Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Talma.Configuration.MultiCloud/\n\u251c\u2500\u2500 Abstractions/\n\u2502   \u251c\u2500\u2500 IConfigurationProvider.cs\n\u2502   \u251c\u2500\u2500 ICloudProvider.cs\n\u2502   \u2514\u2500\u2500 Models/\n\u251c\u2500\u2500 Providers/\n\u2502   \u251c\u2500\u2500 AWS/\n\u2502   \u2502   \u251c\u2500\u2500 AwsCloudProvider.cs\n\u2502   \u2502   \u2514\u2500\u2500 AwsExtensions.cs\n\u2502   \u251c\u2500\u2500 Azure/\n\u2502   \u2502   \u251c\u2500\u2500 AzureCloudProvider.cs\n\u2502   \u2502   \u2514\u2500\u2500 AzureExtensions.cs\n\u2502   \u2514\u2500\u2500 GoogleCloud/\n\u2502       \u251c\u2500\u2500 GoogleCloudProvider.cs\n\u2502       \u2514\u2500\u2500 GoogleCloudExtensions.cs\n\u251c\u2500\u2500 Core/\n\u2502   \u251c\u2500\u2500 MultiCloudConfigurationService.cs\n\u2502   \u251c\u2500\u2500 CacheManager.cs\n\u2502   \u2514\u2500\u2500 ProviderFactory.cs\n\u2514\u2500\u2500 Extensions/\n    \u2514\u2500\u2500 ServiceCollectionExtensions.cs\n"})}),"\n",(0,r.jsx)(n.h3,{id:"justificaci\xf3n-3",children:"Justificaci\xf3n"}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-portabilidad-1",children:"Beneficios de Portabilidad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Verdadera Cloud Agnostic:"})," API \xfanica funciona en todas las nubes principales"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cero Vendor Lock-in:"})," Ruta de migraci\xf3n f\xe1cil entre proveedores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Experiencia de desarrollador consistente:"})," El mismo c\xf3digo funciona en todas partes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Soporte de respaldo:"})," Failover autom\xe1tico entre proveedores de nube"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-operacionales-1",children:"Beneficios Operacionales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gesti\xf3n centralizada:"})," Punto \xfanico para todas las operaciones de configuraci\xf3n/secretos"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Estrategia de cach\xe9:"})," Reduce latencia y costos de API de nube"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rastro de auditor\xeda:"})," Logging y monitoreo integrados"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mejores pr\xe1cticas de seguridad:"})," Cifrado autom\xe1tico, soporte de rotaci\xf3n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"beneficios-de-costo",children:"Beneficios de Costo"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Llamadas API reducidas:"})," El cach\xe9 inteligente reduce costos del proveedor de nube"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Precios flexibles:"})," Puede cambiar al proveedor m\xe1s rentable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sin tarifas de licencia:"})," Biblioteca interna, sin licencias externas"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consecuencias-3",children:"Consecuencias"}),"\n",(0,r.jsx)(n.h4,{id:"positivas-4",children:"Positivas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Complete Portability:"})," True cloud-agnostic solution"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Developer Productivity:"})," Unified API across environments"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Cost Optimization:"})," Flexible provider switching"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Security:"})," Standardized secret management practices"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Future Proof:"})," Easy to add new cloud providers"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"negativas-4",children:"Negativas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Development Overhead:"})," Internal library maintenance required"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Initial Complexity:"})," Higher upfront development cost"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Testing Burden:"})," Must test across multiple cloud providers"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Feature Lag:"})," New cloud features require library updates"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mitigaciones-4",children:"Mitigaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Pruebas automatizadas:"})," Pipeline CI/CD prueba todos los proveedores de nube"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Documentaci\xf3n:"})," Documentos y ejemplos completos"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Estrategia de versionado:"})," Versionado sem\xe1ntico para compatibilidad hacia atr\xe1s"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Contribuci\xf3n de la comunidad:"})," Los equipos internos contribuyen mejoras"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"SDKs de proveedores de nube:"})," Aprovechar SDKs oficiales internamente"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,r.jsx)(n.strong,{children:"Feature flags:"})," Despliegue gradual de nuevas capacidades"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},52774:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/notification_system-cb1ded2e27dd2e4ecf5d4f26b8d2bc4f.png"}}]);