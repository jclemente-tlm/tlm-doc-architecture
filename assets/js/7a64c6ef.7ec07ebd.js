"use strict";(self.webpackChunktlm_doc_architecture=self.webpackChunktlm_doc_architecture||[]).push([[7119],{28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>t});var i=n(96540);const s={},c=i.createContext(s);function a(e){const r=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(c.Provider,{value:r},e.children)}},65013:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"apendices/librerias-compartidas/secrets-configs-shared","title":"SecretsAndConfigs.Shared","description":"Objetivo","source":"@site/docs/apendices/librerias-compartidas/secrets-configs-shared.md","sourceDirName":"apendices/librerias-compartidas","slug":"/apendices/librerias-compartidas/secrets-configs-shared","permalink":"/tlm-doc-architecture/docs/apendices/librerias-compartidas/secrets-configs-shared","draft":false,"unlisted":false,"editUrl":"https://github.com/jclemente-tlm/tlm-doc-architecture/edit/main/docs/apendices/librerias-compartidas/secrets-configs-shared.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"SecretsAndConfigs.Shared","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Librerias Compartidas","permalink":"/tlm-doc-architecture/docs/librerias-compartidas"},"next":{"title":"Observability.Shared","permalink":"/tlm-doc-architecture/docs/apendices/librerias-compartidas/observability-shared"}}');var s=n(74848),c=n(28453);const a={title:"SecretsAndConfigs.Shared",sidebar_position:1},t=void 0,o={},d=[{value:"Objetivo",id:"objetivo",level:2},{value:"Stack inicial",id:"stack-inicial",level:2},{value:"Arquitectura",id:"arquitectura",level:2},{value:"Integraci\xf3n en microservicios .NET 8",id:"integraci\xf3n-en-microservicios-net-8",level:2},{value:"Configuraci\xf3n de proveedor AWS",id:"configuraci\xf3n-de-proveedor-aws",level:2},{value:"Autorefresh / Caching",id:"autorefresh--caching",level:2},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:2}];function l(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"objetivo",children:"Objetivo"}),"\n",(0,s.jsxs)(r.p,{children:["Paquete NuGet que centraliza el acceso a ",(0,s.jsx)(r.strong,{children:"secretos y configuraciones"})," de microservicios .NET 8, con abstracci\xf3n de proveedor, permitiendo cambios de backend sin desarrollos ni despliegues adicionales."]}),"\n",(0,s.jsx)(r.h2,{id:"stack-inicial",children:"Stack inicial"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Secretos: ",(0,s.jsx)(r.strong,{children:"AWS Secrets Manager"})]}),"\n",(0,s.jsxs)(r.li,{children:["Configuraci\xf3n: ",(0,s.jsx)(r.strong,{children:"AWS Parameter Store"})]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"arquitectura",children:"Arquitectura"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"SecretsAndConfig.Shared/\n\u2502\n\u251c\u2500\u2500 Abstractions/\n\u2502   \u251c\u2500\u2500 ISecretProvider.cs\n\u2502   \u2514\u2500\u2500 IConfigProvider.cs\n\u251c\u2500\u2500 Helpers/\n\u2502   \u2514\u2500\u2500 Caching, Validations, Logging\n\u251c\u2500\u2500 Extensions/\n\u2502   \u2514\u2500\u2500 ServiceCollectionExtensions.cs // AddSecretsAndConfigBase()\n\u2514\u2500\u2500 Providers/\n    \u2514\u2500\u2500 AWS/\n        \u251c\u2500\u2500 SecretManagerProvider.cs\n        \u2514\u2500\u2500 ParameterStoreProvider.cs\n"})}),"\n",(0,s.jsx)(r.h2,{id:"integraci\xf3n-en-microservicios-net-8",children:"Integraci\xf3n en microservicios .NET 8"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'var builder = WebApplication.CreateBuilder(args);\n\n// Registrar abstracci\xf3n\nbuilder.Services.AddSecretsAndConfigBase();\n\n// Registrar proveedor AWS concreto\nbuilder.Services.AddSecretsAndConfigAWS(builder.Configuration);\n\nvar app = builder.Build();\n\n// Uso\nvar dbPassword = app.Services.GetRequiredService<ISecretProvider>().GetSecret("DbPassword");\nvar featureFlag = app.Services.GetRequiredService<IConfigProvider>().GetParameter("FeatureXEnabled");\n\napp.Run();\n'})}),"\n",(0,s.jsx)(r.h2,{id:"configuraci\xf3n-de-proveedor-aws",children:"Configuraci\xf3n de proveedor AWS"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["La selecci\xf3n del proveedor de secretos/configuraci\xf3n se hace mediante ",(0,s.jsx)(r.code,{children:"appsettings.json"})," o variables de entorno."]}),"\n",(0,s.jsx)(r.li,{children:"Ejemplo de configuraci\xf3n inicial en AWS:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'{\n  "SecretsProvider": "AWS",\n  "SecretsConfig": {\n    "Region": "us-east-1"\n  }\n}\n'})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"El NuGet selecciona autom\xe1ticamente el proveedor correcto sin necesidad de redeploy."}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"autorefresh--caching",children:"Autorefresh / Caching"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Se implementa caching interno con expiraci\xf3n o polling, asegurando que los microservicios siempre lean valores recientes."}),"\n",(0,s.jsx)(r.li,{children:"Ejemplo simplificado:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public class CachingSecretProvider : ISecretProvider\n{\n    private readonly ISecretProvider _inner;\n    private readonly MemoryCache _cache = new MemoryCache(new MemoryCacheOptions());\n    private readonly TimeSpan _refreshInterval = TimeSpan.FromMinutes(5);\n\n    public CachingSecretProvider(ISecretProvider inner) { _inner = inner; }\n\n    public string GetSecret(string key)\n    {\n        return _cache.GetOrCreate(key, entry => {\n            entry.AbsoluteExpirationRelativeToNow = _refreshInterval;\n            return _inner.GetSecret(key);\n        });\n    }\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Nunca guardar secretos en c\xf3digo fuente."}),"\n",(0,s.jsx)(r.li,{children:"Usar caching interno para secretos y par\xe1metros cr\xedticos."}),"\n",(0,s.jsx)(r.li,{children:"Centralizar documentaci\xf3n de keys y par\xe1metros obligatorios para cada microservicio."}),"\n",(0,s.jsx)(r.li,{children:"Mantener consistencia de abstracci\xf3n en todos los microservicios."}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);