"use strict";(self.webpackChunktlm_doc_architecture=self.webpackChunktlm_doc_architecture||[]).push([[1581],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(96540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},89155:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"servicios-corporativos/api-gateway/requisitos-calidad","title":"10. Requisitos de calidad","description":"10.1 Rendimiento","source":"@site/docs/servicios-corporativos/api-gateway/10-requisitos-calidad.md","sourceDirName":"servicios-corporativos/api-gateway","slug":"/servicios-corporativos/api-gateway/requisitos-calidad","permalink":"/tlm-doc-architecture/docs/servicios-corporativos/api-gateway/requisitos-calidad","draft":false,"unlisted":false,"editUrl":"https://github.com/jclemente-tlm/tlm-doc-architecture/edit/main/docs/servicios-corporativos/api-gateway/10-requisitos-calidad.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"9. Decisiones de arquitectura","permalink":"/tlm-doc-architecture/docs/servicios-corporativos/api-gateway/decisiones-arquitectura"},"next":{"title":"11. Riesgos y deuda t\xe9cnica","permalink":"/tlm-doc-architecture/docs/servicios-corporativos/api-gateway/riesgos-deuda-tecnica"}}');var r=i(74848),s=i(28453);const a={},d="10. Requisitos de calidad",c={},o=[{value:"10.1 Rendimiento",id:"101-rendimiento",level:2},{value:"10.2 Seguridad",id:"102-seguridad",level:2},{value:"10.3 Escalabilidad",id:"103-escalabilidad",level:2},{value:"10.4 Atributos de calidad",id:"104-atributos-de-calidad",level:2},{value:"10.5 Disponibilidad",id:"105-disponibilidad",level:2},{value:"10.6 Escalabilidad",id:"106-escalabilidad",level:2},{value:"10.7 Seguridad",id:"107-seguridad",level:2},{value:"10.8 Escenarios de calidad",id:"108-escenarios-de-calidad",level:2},{value:"10.8.1 Rendimiento bajo carga",id:"1081-rendimiento-bajo-carga",level:3},{value:"10.8.2 Resiliencia ante fallos",id:"1082-resiliencia-ante-fallos",level:3},{value:"10.8.3 Seguridad",id:"1083-seguridad",level:3},{value:"10.9 M\xe9tricas y monitoreo",id:"109-m\xe9tricas-y-monitoreo",level:2},{value:"10.10 Pruebas de calidad",id:"1010-pruebas-de-calidad",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"10-requisitos-de-calidad",children:"10. Requisitos de calidad"})}),"\n",(0,r.jsx)(n.h2,{id:"101-rendimiento",children:"10.1 Rendimiento"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"M\xe9trica"}),(0,r.jsx)(n.th,{children:"Objetivo"}),(0,r.jsx)(n.th,{children:"Medici\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Latencia"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 100ms p95"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Prometheus"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Throughput"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10k requests/seg"})}),(0,r.jsx)(n.td,{children:"Load testing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Disponibilidad"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"99.9%"})}),(0,r.jsx)(n.td,{children:"Health checks"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CPU"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 70% promedio"})}),(0,r.jsx)(n.td,{children:"Monitoreo"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"102-seguridad",children:"10.2 Seguridad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Aspecto"}),(0,r.jsx)(n.th,{children:"Requisito"}),(0,r.jsx)(n.th,{children:"Implementaci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Autenticaci\xf3n"})}),(0,r.jsx)(n.td,{children:"JWT obligatorio"}),(0,r.jsx)(n.td,{children:"Middleware"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Rate limiting"})}),(0,r.jsx)(n.td,{children:"Por usuario/IP"}),(0,r.jsx)(n.td,{children:"Redis"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"TLS"})}),(0,r.jsx)(n.td,{children:"1.3 m\xednimo"}),(0,r.jsx)(n.td,{children:"Certificados"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Headers"})}),(0,r.jsx)(n.td,{children:"Security headers"}),(0,r.jsx)(n.td,{children:"Middleware"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"103-escalabilidad",children:"10.3 Escalabilidad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Aspecto"}),(0,r.jsx)(n.th,{children:"Objetivo"}),(0,r.jsx)(n.th,{children:"Estrategia"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Horizontal"})}),(0,r.jsx)(n.td,{children:"Auto-scaling"}),(0,r.jsx)(n.td,{children:"ECS Fargate + Terraform"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Carga"})}),(0,r.jsx)(n.td,{children:"Load balancing"}),(0,r.jsx)(n.td,{children:"ALB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Cache"})}),(0,r.jsx)(n.td,{children:"Redis distribuido"}),(0,r.jsx)(n.td,{children:"Clustering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Configuraci\xf3n"})}),(0,r.jsx)(n.td,{children:"Hot reload"}),(0,r.jsx)(n.td,{children:"Din\xe1mico"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"104-atributos-de-calidad",children:"10.4 Atributos de calidad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Atributo"}),(0,r.jsx)(n.th,{children:"M\xe9trica"}),(0,r.jsx)(n.th,{children:"Objetivo"}),(0,r.jsx)(n.th,{children:"Cr\xedtico"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Latencia"})}),(0,r.jsx)(n.td,{children:"Tiempo de respuesta p95"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 100ms"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 200ms"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Rendimiento"})}),(0,r.jsx)(n.td,{children:"Solicitudes/segundo"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"> 5,000 RPS"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"> 2,000 RPS"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Latencia de routing"})}),(0,r.jsx)(n.td,{children:"Tiempo interno de proxy"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 5ms"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 10ms"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Utilizaci\xf3n de CPU"})}),(0,r.jsx)(n.td,{children:"Uso promedio de CPU"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 70%"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 85%"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Uso de memoria"})}),(0,r.jsx)(n.td,{children:"Uso promedio de memoria"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 2GB"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"< 4GB"})})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// appsettings.Production.json (fragmento)\n{\n  "Rendimiento": {\n    "ConnectionPooling": {\n      "MaxConnectionsPerServer": 20,\n      "PooledConnectionLifetime": "00:02:00",\n      "ConnectionTimeout": "00:00:30"\n    },\n    "Caching": {\n      "DefaultTTL": "00:05:00",\n      "MaxCacheSize": "100MB",\n      "EvictionPolicy": "LRU"\n    },\n    "RateLimiting": {\n      "WindowSize": "00:01:00",\n      "SlidingWindowSegments": 10\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"105-disponibilidad",children:"10.5 Disponibilidad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Componente"}),(0,r.jsx)(n.th,{children:"SLA"}),(0,r.jsx)(n.th,{children:"Downtime m\xe1ximo/mes"}),(0,r.jsx)(n.th,{children:"RPO"}),(0,r.jsx)(n.th,{children:"RTO"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"API Gateway"})}),(0,r.jsx)(n.td,{children:"99.9%"}),(0,r.jsx)(n.td,{children:"43.2 minutos"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"30 segundos"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"YARP Proxy"})}),(0,r.jsx)(n.td,{children:"99.95%"}),(0,r.jsx)(n.td,{children:"21.6 minutos"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"15 segundos"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Health Checks"})}),(0,r.jsx)(n.td,{children:"99.99%"}),(0,r.jsx)(n.td,{children:"4.32 minutos"}),(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"5 segundos"})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Configuraci\xf3n de verificaciones de salud para alta disponibilidad\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddHealthChecks()\n        .AddCheck("gateway-ready", () =>\n        {\n            // Verificar componentes cr\xedticos\n            var checks = new[]\n            {\n                CheckYarpConfiguration(),\n                CheckRedisConnection(),\n                CheckIdentityService(),\n                CheckMemoryUsage(),\n                CheckDiskSpace()\n            };\n\n            return checks.All(c => c)\n                ? HealthCheckResult.Healthy("All systems operational")\n                : HealthCheckResult.Degraded("Some systems degraded");\n        })\n        .AddCheck("detailed-diagnostics", () =>\n        {\n            var diagnostics = new Dictionary<string, object>\n            {\n                ["uptime"] = DateTime.UtcNow - _startTime,\n                ["requests_processed"] = _metricsCollector.TotalRequests,\n                ["active_connections"] = _connectionManager.ActiveConnections,\n                ["circuit_breakers"] = _circuitBreakerService.GetStatus(),\n                ["cache_hit_ratio"] = _cacheService.GetHitRatio()\n            };\n\n            return HealthCheckResult.Healthy("Detailed diagnostics", diagnostics);\n        });\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"106-escalabilidad",children:"10.6 Escalabilidad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Dimensi\xf3n"}),(0,r.jsx)(n.th,{children:"Capacidad actual"}),(0,r.jsx)(n.th,{children:"Capacidad objetivo"}),(0,r.jsx)(n.th,{children:"Estrategia"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Solicitudes concurrentes"})}),(0,r.jsx)(n.td,{children:"1,000"}),(0,r.jsx)(n.td,{children:"10,000"}),(0,r.jsx)(n.td,{children:"Escalado horizontal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Servicios backend"})}),(0,r.jsx)(n.td,{children:"10"}),(0,r.jsx)(n.td,{children:"50+"}),(0,r.jsx)(n.td,{children:"Enrutamiento din\xe1mico"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Tenants"})}),(0,r.jsx)(n.td,{children:"100"}),(0,r.jsx)(n.td,{children:"1,000+"}),(0,r.jsx)(n.td,{children:"Multi-tenant architecture"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Regiones"})}),(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"3+"}),(0,r.jsx)(n.td,{children:"Multi-region deployment"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"107-seguridad",children:"10.7 Seguridad"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\xc1rea"}),(0,r.jsx)(n.th,{children:"Requisito"}),(0,r.jsx)(n.th,{children:"Implementaci\xf3n"}),(0,r.jsx)(n.th,{children:"Verificaci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Autenticaci\xf3n"})}),(0,r.jsx)(n.td,{children:"OAuth2/OIDC + JWT"}),(0,r.jsx)(n.td,{children:"Identity Service integration"}),(0,r.jsx)(n.td,{children:"Token validation tests"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Autorizaci\xf3n"})}),(0,r.jsx)(n.td,{children:"RBAC por tenant"}),(0,r.jsx)(n.td,{children:"Claims-based policies"}),(0,r.jsx)(n.td,{children:"Policy unit tests"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Encriptaci\xf3n"})}),(0,r.jsx)(n.td,{children:"TLS 1.3 en tr\xe1nsito"}),(0,r.jsx)(n.td,{children:"HTTPS everywhere"}),(0,r.jsx)(n.td,{children:"SSL Labs A+ rating"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Headers de seguridad"})}),(0,r.jsx)(n.td,{children:"OWASP compliance"}),(0,r.jsx)(n.td,{children:"Security middleware"}),(0,r.jsx)(n.td,{children:"Security scan tools"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Rate limiting"})}),(0,r.jsx)(n.td,{children:"Prevenir DDoS"}),(0,r.jsx)(n.td,{children:"Distributed rate limiter"}),(0,r.jsx)(n.td,{children:"Testing de carga"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"108-escenarios-de-calidad",children:"10.8 Escenarios de calidad"}),"\n",(0,r.jsx)(n.h3,{id:"1081-rendimiento-bajo-carga",children:"10.8.1 Rendimiento bajo carga"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"Feature: Rendimiento bajo alta carga\n  Como operador del sistema\n  Quiero que el API Gateway mantenga rendimiento aceptable bajo carga alta\n  Para garantizar experiencia de usuario consistente\n\nScenario: Handling peak traffic\n  Given el API Gateway est\xe1 desplegado con 3 instancias\n  And hay 50 servicios backend registrados\n  When se reciben 5,000 requests por segundo durante 10 minutos\n  Then el tiempo de respuesta p95 debe ser menor a 100ms\n  And el CPU usage promedio debe ser menor al 70%\n  And no debe haber errores 5xx por sobrecarga\n  And todas las instancias deben permanecer healthy\n"})}),"\n",(0,r.jsx)(n.h3,{id:"1082-resiliencia-ante-fallos",children:"10.8.2 Resiliencia ante fallos"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"Feature: Resiliencia ante fallos de servicios\n  Como operador del sistema\n  Quiero que el API Gateway maneje fallos de servicios gracefully\n  Para mantener disponibilidad de servicios funcionando\n\nScenario: Backend service failure\n  Given el API Gateway est\xe1 rutando a 10 servicios backend\n  And uno de los servicios backend falla completamente\n  When se reciben requests para el servicio fallido\n  Then el circuit breaker debe abrirse en menos de 30 segundos\n  And los requests deben devolver error 503 inmediatamente\n  And los otros servicios deben funcionar normalmente\n  And las m\xe9tricas deben registrar el fallo correctamente\n\nScenario: Partial service degradation\n  Given un servicio backend responde con alta latencia (>5 segundos)\n  When se reciben m\xfaltiples requests para ese servicio\n  Then el timeout debe activarse a los 30 segundos\n  And las retry policies deben activarse\n  And despu\xe9s de 3 fallos consecutivos debe activarse circuit breaker\n  And el servicio debe recuperarse autom\xe1ticamente cuando mejore\n"})}),"\n",(0,r.jsx)(n.h3,{id:"1083-seguridad",children:"10.8.3 Seguridad"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"Feature: Protecci\xf3n contra ataques\n  Como administrador de seguridad\n  Quiero que el API Gateway proteja contra ataques comunes\n  Para mantener la seguridad del sistema\n\nScenario: Rate limiting protection\n  Given un cliente con l\xedmite de 100 requests/minuto\n  When env\xeda 150 requests en 1 minuto\n  Then los primeros 100 requests deben procesarse normalmente\n  And los siguientes 50 requests deben recibir HTTP 429\n  And el rate limit debe resetear despu\xe9s de 1 minuto\n  And debe registrarse el evento en logs de seguridad\n\nScenario: JWT token validation\n  Given un request con JWT token expirado\n  When llega al API Gateway\n  Then debe rechazarse con HTTP 401\n  And debe loggearse el intento de acceso no autorizado\n  And no debe forwarding al servicio backend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"109-m\xe9tricas-y-monitoreo",children:"10.9 M\xe9tricas y monitoreo"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["KPIs y m\xe9tricas expuestas v\xeda ",(0,r.jsx)(n.code,{children:"Prometheus"})," y visualizadas en ",(0,r.jsx)(n.code,{children:"Grafana"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Alertas autom\xe1ticas configuradas en ",(0,r.jsx)(n.code,{children:"Prometheus"})," para disponibilidad, latencia, errores y uso de recursos."]}),"\n",(0,r.jsxs)(n.li,{children:["Dashboards de calidad y salud en ",(0,r.jsx)(n.code,{children:"Grafana"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'public class ApiGatewayMetrics\n{\n    private readonly IMetrics _metrics;\n\n    // M\xe9tricas de negocio\n    public void RecordBusinessMetrics(HttpContext context, TimeSpan duration)\n    {\n        var tags = new TagList\n        {\n            ["tenant_id"] = context.Items["TenantId"]?.ToString(),\n            ["service"] = GetTargetService(context),\n            ["method"] = context.Request.Method,\n            ["status_class"] = GetStatusClass(context.Response.StatusCode)\n        };\n\n        // KPIs principales\n        _metrics.Counter("api_gateway_requests_total").Add(1, tags);\n        _metrics.Histogram("api_gateway_request_duration_seconds").Record(duration.TotalSeconds, tags);\n        _metrics.Counter("api_gateway_bytes_transferred_total").Add(GetResponseSize(context), tags);\n\n        // M\xe9tricas de calidad de servicio\n        if (duration.TotalMilliseconds > 100)\n        {\n            _metrics.Counter("api_gateway_slow_requests_total").Add(1, tags);\n        }\n\n        if (context.Response.StatusCode >= 500)\n        {\n            _metrics.Counter("api_gateway_server_errors_total").Add(1, tags);\n        }\n    }\n\n    // M\xe9tricas de infraestructura\n    public void RecordInfrastructureMetrics()\n    {\n        var process = Process.GetCurrentProcess();\n\n        _metrics.Gauge("api_gateway_memory_usage_bytes").Set(process.WorkingSet64);\n        _metrics.Gauge("api_gateway_cpu_usage_percent").Set(GetCpuUsage());\n        _metrics.Gauge("api_gateway_active_connections").Set(_connectionManager.ActiveConnections);\n        _metrics.Gauge("api_gateway_thread_pool_available").Set(ThreadPool.ThreadCount);\n    }\n\n    // M\xe9tricas de circuit breakers\n    public void RecordCircuitBreakerMetrics(string serviceName, CircuitState state)\n    {\n        var tags = new TagList { ["service"] = serviceName, ["state"] = state.ToString() };\n        _metrics.Gauge("api_gateway_circuit_breaker_state").Set((int)state, tags);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Configuraci\xf3n de alertas en Prometheus\ngroups:\n- name: api-gateway-alerts\n  rules:\n  # Disponibilidad\n  - alert: ApiGatewayDown\n    expr: up{job="api-gateway"} == 0\n    for: 30s\n    labels:\n      severity: critical\n    annotations:\n      summary: "API Gateway instance is down"\n      description: "API Gateway instance {{ $labels.instance }} has been down for more than 30 seconds"\n\n  # Performance\n  - alert: HighLatency\n    expr: histogram_quantile(0.95, api_gateway_request_duration_seconds_bucket) > 0.1\n    for: 5m\n    labels:\n      severity: warning\n    annotations:\n      summary: "High request latency detected"\n      description: "95th percentile latency is {{ $value }}s for the last 5 minutes"\n\n  - alert: HighErrorRate\n    expr: rate(api_gateway_server_errors_total[5m]) / rate(api_gateway_requests_total[5m]) > 0.01\n    for: 2m\n    labels:\n      severity: critical\n    annotations:\n      summary: "High error rate detected"\n      description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes"\n\n  # Circuit Breakers\n  - alert: CircuitBreakerOpen\n    expr: api_gateway_circuit_breaker_state == 2\n    for: 1m\n    labels:\n      severity: warning\n    annotations:\n      summary: "Circuit breaker opened for service {{ $labels.service }}"\n      description: "Service {{ $labels.service }} circuit breaker has been open for more than 1 minute"\n\n  # Limitaci\xf3n de Velocidad\n  - alert: HighRateLimitHitRate\n    expr: rate(api_gateway_rate_limit_exceeded_total[5m]) / rate(api_gateway_requests_total[5m]) > 0.1\n    for: 5m\n    labels:\n      severity: warning\n    annotations:\n      summary: "High rate limit hit rate"\n      description: "Rate limit hit rate is {{ $value | humanizePercentage }} for the last 5 minutes"\n\n  # Infrastructure\n  - alert: HighMemoryUsage\n    expr: api_gateway_memory_usage_bytes / (4 * 1024 * 1024 * 1024) > 0.9\n    for: 5m\n    labels:\n      severity: warning\n    annotations:\n      summary: "High memory usage detected"\n      description: "Memory usage is {{ $value | humanizePercentage }} of 4GB limit"\n\n  - alert: HighCpuUsage\n    expr: api_gateway_cpu_usage_percent > 80\n    for: 10m\n    labels:\n      severity: warning\n    annotations:\n      summary: "High CPU usage detected"\n      description: "CPU usage is {{ $value }}% for the last 10 minutes"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"1010-pruebas-de-calidad",children:"10.10 Pruebas de calidad"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Pruebas de carga automatizadas (",(0,r.jsx)(n.code,{children:"k6"}),") para validar rendimiento y escalabilidad."]}),"\n",(0,r.jsxs)(n.li,{children:["Pruebas de caos (",(0,r.jsx)(n.code,{children:"Polly"}),", simulaci\xf3n de fallos) para validar resiliencia."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// K6 script para pruebas de carga\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\nimport { Rate } from 'k6/metrics';\n\nconst errorRate = new Rate('errors');\n\nexport let options = {\n  stages: [\n    { duration: '2m', target: 100 },    // Ramp up\n    { duration: '5m', target: 100 },    // Stay at 100 users\n    { duration: '2m', target: 200 },    // Ramp up to 200 users\n    { duration: '5m', target: 200 },    // Stay at 200 users\n    { duration: '2m', target: 500 },    // Ramp up to 500 users\n    { duration: '5m', target: 500 },    // Stay at 500 users\n    { duration: '2m', target: 0 },      // Ramp down\n  ],\n  thresholds: {\n    http_req_duration: ['p(95)<100'],    // 95% of requests under 100ms\n    http_req_failed: ['rate<0.01'],      // Error rate under 1%\n    errors: ['rate<0.01'],\n  },\n};\n\nexport default function() {\n  const params = {\n    headers: {\n      'Authorization': 'Bearer ' + getJwtToken(),\n      'Content-Type': 'application/json',\n      'X-Tenant-ID': 'test-tenant',\n    },\n  };\n\n  // Test different endpoints\n  const endpoints = [\n    '/api/notifications/templates',\n    '/api/track-trace/shipments',\n    '/api/identity/users/profile',\n    '/api/sita-messaging/status'\n  ];\n\n  const endpoint = endpoints[Math.floor(Math.random() * endpoints.length)];\n  const response = http.get(`https://api-gateway.corporate-services.local${endpoint}`, params);\n\n  const result = check(response, {\n    'status is 200': (r) => r.status === 200,\n    'response time < 100ms': (r) => r.timings.duration < 100,\n    'response has content': (r) => r.body.length > 0,\n  });\n\n  errorRate.add(!result);\n  sleep(1);\n}\n\nfunction getJwtToken() {\n  // Mock JWT token generation\n  return 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...';\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Pruebas de caos usando Polly\npublic class ChaosEngineeringTests\n{\n    [Test]\n    public async Task ApiGateway_ShouldHandleRandomServiceFailures()\n    {\n        // Configurar caos en servicios backend aleatoriamente\n        var chaosPolicy = MonkeyPolicy.InjectFaultAsync(with =>\n            with.Fault(new HttpRequestException("Simulated service failure"))\n                .InjectionRate(0.1) // 10% de requests fallan\n                .Enabled());\n\n        var httpClient = _factory.CreateClient();\n        httpClient.AddPolicy(chaosPolicy);\n\n        var tasks = Enumerable.Range(0, 1000)\n            .Select(async _ =>\n            {\n                try\n                {\n                    var response = await httpClient.GetAsync("/api/notifications/templates");\n                    return response.IsSuccessStatusCode;\n                }\n                catch\n                {\n                    return false;\n                }\n            });\n\n        var results = await Task.WhenAll(tasks);\n        var successRate = results.Count(r => r) / (double)results.Length;\n\n        // Debe mantener al menos 90% de \xe9xito a pesar del caos\n        Assert.That(successRate, Is.GreaterThan(0.9));\n    }\n\n    [Test]\n    public async Task ApiGateway_ShouldRecoverFromNetworkPartition()\n    {\n        // Simular partici\xf3n de red\n        _testServer.SimulateNetworkPartition(TimeSpan.FromMinutes(1));\n\n        var httpClient = _factory.CreateClient();\n\n        // Requests durante la partici\xf3n deben fallar r\xe1pidamente\n        var response1 = await httpClient.GetAsync("/api/health/ready");\n        Assert.That(response1.StatusCode, Is.EqualTo(HttpStatusCode.ServiceUnavailable));\n\n        // Esperar recuperaci\xf3n\n        await Task.Delay(TimeSpan.FromMinutes(1.5));\n\n        // Despu\xe9s de la recuperaci\xf3n debe funcionar normalmente\n        var response2 = await httpClient.GetAsync("/api/health/ready");\n        Assert.That(response2.StatusCode, Is.EqualTo(HttpStatusCode.OK));\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);